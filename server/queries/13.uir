const %7749[33] = "\003\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

const %8099[0] = ""

const %8137[4] = "\000\000\000\000"

const %11428[12] = "\000\000\000\000\001\000\000\000\010\000\000\000"

const %13530[18] = "%special%requests%"

const %13581[55] = "\002\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000\010\000\000\000\017\000\000\000\004\000\000\000\014\000\000\000\002\000\000\000\014\000\000\000specialrequests"

const %29447[1] = " "

define int32 @_9_init(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 128
  call void umbra::RelationMapped::Reader::init(void*) (%CompilationContext_cpp_215_)
  %CompilationContext_cpp_215_0 = getelementptr int8 %state, i64 224
  call void umbra::RelationMapped::Reader::init(void*) (%CompilationContext_cpp_215_0)
  %CompilationContext_cpp_215_1 = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::init(void*, unsigned int) (%CompilationContext_cpp_215_1, i32 1)
  %CompilationContext_cpp_215_2 = getelementptr int8 %state, i64 368
  call void umbra::AggregationTarget::init(umbra::AggregationTarget*, unsigned long) (%CompilationContext_cpp_215_2, i64 12)
  %CompilationContext_cpp_215_4 = getelementptr int8 %state, i64 24960
  call void umbra::AggregationTarget::init(umbra::AggregationTarget*, unsigned long) (%CompilationContext_cpp_215_4, i64 16)
  %CompilationContext_cpp_215_6 = getelementptr int8 %state, i64 49552
  call void umbra::SortOperator::init(umbra::SortOperator*, void const*, void const*) (%CompilationContext_cpp_215_6, %state, global %7749)
  return 1
}

define bool @_9_joined(int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 28736
  %MaterializationHelper_cpp_876_ = load int32 %Pipeline_cpp_276_
  %Pipeline_cpp_276_0 = getelementptr int8 %localState, i64 28736
  %MaterializationHelper_cpp_726_ = getelementptr int8 %Pipeline_cpp_276_0, i64 8
  %MaterializationHelper_cpp_727_ = load int8 %MaterializationHelper_cpp_726_
  %MaterializationHelper_cpp_780_ = and i8 %MaterializationHelper_cpp_727_, 1
  %MaterializationHelper_cpp_780_1 = cmpne i8 %MaterializationHelper_cpp_780_, 0
  %Hash_cpp_264_ = zext i64 %MaterializationHelper_cpp_876_
  %Hash_cpp_374_ = crc32 i64 5961697176435608501, %Hash_cpp_264_
  %Hash_cpp_375_ = crc32 i64 2231409791114444147, %Hash_cpp_264_
  %Hash_cpp_379_ = rotr i64 %Hash_cpp_375_, 32
  %Hash_cpp_379_4 = xor i64 %Hash_cpp_374_, %Hash_cpp_379_
  %Hash_cpp_379_5 = mul i64 %Hash_cpp_379_4, 2685821657736338717
  %Pipeline_cpp_276_6 = getelementptr int8 %localState, i64 32
  %hashTable = getelementptr object umbra::Preaggregation %Pipeline_cpp_276_6, i32 0, i32 0, i32 0
  %PreaggregationLogic_cpp_20_ = and i64 %Hash_cpp_379_5, 1023
  %PreaggregationLogic_cpp_20_7 = load object umbra::Preaggregation::EntryHeader* %hashTable, %PreaggregationLogic_cpp_20_
  %hash = load object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_20_7, i32 0, i32 0
  %PreaggregationLogic_cpp_25_ = cmpne i64 %hash, %Hash_cpp_379_5
  condbr %PreaggregationLogic_cpp_25_ %then %else9

then:
  %PreaggregationLogic_cpp_29_ = call ptr umbra::Preaggregation::addEntry(unsigned long) (%Pipeline_cpp_276_6, %Hash_cpp_379_5)
  store int32 %MaterializationHelper_cpp_876_, %PreaggregationLogic_cpp_29_
  %GroupByTranslator_cpp_368_ = getelementptr int8 %PreaggregationLogic_cpp_29_, i64 4
  condbr %MaterializationHelper_cpp_780_1 %then8 %else

then8:
  store int64 i64 0, %GroupByTranslator_cpp_368_
  br %cont

else:
  store int64 i64 1, %GroupByTranslator_cpp_368_
  br %cont

cont:
  br %cont15

else9:
  %PreaggregationLogic_cpp_36_ = getelementptr object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_20_7, i32 1
  %MaterializationHelper_cpp_876_10 = load int32 %PreaggregationLogic_cpp_36_
  %Integer_cpp_80_ = cmpeq i32 %MaterializationHelper_cpp_876_, %MaterializationHelper_cpp_876_10
  condbr %Integer_cpp_80_ %else11 %then

else11:
  %GroupByTranslator_cpp_378_ = getelementptr int8 %PreaggregationLogic_cpp_36_, i64 4
  condbr %MaterializationHelper_cpp_780_1 %then12 %else13

then12:
  br %cont14

else13:
  %MaterializationHelper_cpp_977_ = load int64 %GroupByTranslator_cpp_378_
  %Aggregate_cpp_213_ = add i64 %MaterializationHelper_cpp_977_, 1
  store int64 %Aggregate_cpp_213_, %GroupByTranslator_cpp_378_
  br %cont14

cont14:
  br %cont15

cont15:
  return true
}

declare int8* @umbra::Preaggregation::addEntry(unsigned long)(object umbra::Preaggregation* %1163, int64 %1177)

define int32 @_9_compare(int8* %trampoline, int8* %left, int8* %right) [
] {
body:
  %MaterializationHelper_cpp_230_ = load int64 %left
  %MaterializationHelper_cpp_229_ = getelementptr int8 %left, i64 8
  %MaterializationHelper_cpp_230_0 = load int64 %MaterializationHelper_cpp_229_
  %MaterializationHelper_cpp_230_1 = load int64 %right
  %MaterializationHelper_cpp_229_2 = getelementptr int8 %right, i64 8
  %MaterializationHelper_cpp_230_3 = load int64 %MaterializationHelper_cpp_229_2
  %BigInt_cpp_106_ = cmpslt i64 %MaterializationHelper_cpp_230_1, %MaterializationHelper_cpp_230_
  %BigInt_cpp_106_5 = zext i32 %BigInt_cpp_106_
  %BigInt_cpp_106_6 = cmpslt i64 %MaterializationHelper_cpp_230_, %MaterializationHelper_cpp_230_1
  %BigInt_cpp_106_7 = zext i32 %BigInt_cpp_106_6
  %BigInt_cpp_106_8 = sub i32 %BigInt_cpp_106_7, %BigInt_cpp_106_5
  %BigInt_cpp_106_9 = cmpslt i64 %MaterializationHelper_cpp_230_3, %MaterializationHelper_cpp_230_0
  %BigInt_cpp_106_10 = zext i32 %BigInt_cpp_106_9
  %BigInt_cpp_106_11 = cmpslt i64 %MaterializationHelper_cpp_230_0, %MaterializationHelper_cpp_230_3
  %BigInt_cpp_106_12 = zext i32 %BigInt_cpp_106_11
  %BigInt_cpp_106_13 = sub i32 %BigInt_cpp_106_12, %BigInt_cpp_106_10
  %SortTranslator_cpp_113_ = cmpeq i32 %BigInt_cpp_106_8, 0
  %SortTranslator_cpp_113_14 = SExt i32 %SortTranslator_cpp_113_
  %SortTranslator_cpp_113_15 = and i32 %BigInt_cpp_106_13, %SortTranslator_cpp_113_14
  %SortTranslator_cpp_113_16 = or i32 %BigInt_cpp_106_8, %SortTranslator_cpp_113_15
  return %SortTranslator_cpp_113_16
}

define int32 @_9_partition(int8* %trampoline, int8** %tuples, int8** %tuplesEnd, int8*** %pivotRange) [
] {
body:
  %SortTranslator_cpp_208_ = ptrtoint i64 %tuplesEnd
  %SortTranslator_cpp_208_0 = ptrtoint i64 %tuples
  %CodeGen_cpp_1523_ = sub i64 %SortTranslator_cpp_208_, %SortTranslator_cpp_208_0
  %CodeGen_cpp_1525_ = sdiv i64 %CodeGen_cpp_1523_, 8
  %SortTranslator_cpp_208_1 = sub i64 %CodeGen_cpp_1525_, 1
  %SortTranslator_cpp_208_2 = ashr i64 %SortTranslator_cpp_208_1, 1
  %SortTranslator_cpp_208_3 = load int8* %tuples, %SortTranslator_cpp_208_2
  %MaterializationHelper_cpp_230_ = load int64 %SortTranslator_cpp_208_3
  %MaterializationHelper_cpp_229_ = getelementptr int8 %SortTranslator_cpp_208_3, i64 8
  %MaterializationHelper_cpp_230_4 = load int64 %MaterializationHelper_cpp_229_
  %SortTranslator_cpp_212_ = getelementptr int8* %tuples, i32 -1
  br %loopPrefix

loopPrefix:
  %prefix = phi ptr [%SortTranslator_cpp_212_, %body %SortTranslator_cpp_214_, %loopPrefix]
  %SortTranslator_cpp_214_ = getelementptr int8* %prefix, i32 1
  %SortTranslator_cpp_216_ = load int8* %SortTranslator_cpp_214_
  %MaterializationHelper_cpp_230_5 = load int64 %SortTranslator_cpp_216_
  %MaterializationHelper_cpp_229_6 = getelementptr int8 %SortTranslator_cpp_216_, i64 8
  %MaterializationHelper_cpp_230_7 = load int64 %MaterializationHelper_cpp_229_6
  %BigInt_cpp_106_ = cmpslt i64 %MaterializationHelper_cpp_230_, %MaterializationHelper_cpp_230_5
  %BigInt_cpp_106_9 = zext i32 %BigInt_cpp_106_
  %BigInt_cpp_106_10 = cmpslt i64 %MaterializationHelper_cpp_230_5, %MaterializationHelper_cpp_230_
  %BigInt_cpp_106_11 = zext i32 %BigInt_cpp_106_10
  %BigInt_cpp_106_12 = sub i32 %BigInt_cpp_106_11, %BigInt_cpp_106_9
  %BigInt_cpp_106_13 = cmpslt i64 %MaterializationHelper_cpp_230_4, %MaterializationHelper_cpp_230_7
  %BigInt_cpp_106_14 = zext i32 %BigInt_cpp_106_13
  %BigInt_cpp_106_15 = cmpslt i64 %MaterializationHelper_cpp_230_7, %MaterializationHelper_cpp_230_4
  %BigInt_cpp_106_16 = zext i32 %BigInt_cpp_106_15
  %BigInt_cpp_106_17 = sub i32 %BigInt_cpp_106_16, %BigInt_cpp_106_14
  %SortTranslator_cpp_166_ = cmpeq i32 %BigInt_cpp_106_12, 0
  %SortTranslator_cpp_166_18 = SExt i32 %SortTranslator_cpp_166_
  %SortTranslator_cpp_166_19 = and i32 %BigInt_cpp_106_17, %SortTranslator_cpp_166_18
  %SortTranslator_cpp_166_20 = or i32 %BigInt_cpp_106_12, %SortTranslator_cpp_166_19
  %SortTranslator_cpp_192_ = cmpslt i32 %SortTranslator_cpp_166_20, 0
  condbr %SortTranslator_cpp_192_ %loopPrefix %loopDonePrefix

loopDonePrefix:
  br %loopSuffix

loopSuffix:
  %suffix = phi ptr [%tuplesEnd, %loopDonePrefix %SortTranslator_cpp_224_, %loopSuffix]
  %SortTranslator_cpp_224_ = getelementptr int8* %suffix, i32 -1
  %SortTranslator_cpp_226_ = load int8* %SortTranslator_cpp_224_
  %MaterializationHelper_cpp_230_21 = load int64 %SortTranslator_cpp_226_
  %MaterializationHelper_cpp_229_22 = getelementptr int8 %SortTranslator_cpp_226_, i64 8
  %MaterializationHelper_cpp_230_23 = load int64 %MaterializationHelper_cpp_229_22
  %BigInt_cpp_106_25 = cmpslt i64 %MaterializationHelper_cpp_230_21, %MaterializationHelper_cpp_230_
  %BigInt_cpp_106_26 = zext i32 %BigInt_cpp_106_25
  %BigInt_cpp_106_27 = cmpslt i64 %MaterializationHelper_cpp_230_, %MaterializationHelper_cpp_230_21
  %BigInt_cpp_106_28 = zext i32 %BigInt_cpp_106_27
  %BigInt_cpp_106_29 = sub i32 %BigInt_cpp_106_28, %BigInt_cpp_106_26
  %BigInt_cpp_106_30 = cmpslt i64 %MaterializationHelper_cpp_230_23, %MaterializationHelper_cpp_230_4
  %BigInt_cpp_106_31 = zext i32 %BigInt_cpp_106_30
  %BigInt_cpp_106_32 = cmpslt i64 %MaterializationHelper_cpp_230_4, %MaterializationHelper_cpp_230_23
  %BigInt_cpp_106_33 = zext i32 %BigInt_cpp_106_32
  %BigInt_cpp_106_34 = sub i32 %BigInt_cpp_106_33, %BigInt_cpp_106_31
  %SortTranslator_cpp_166_35 = cmpeq i32 %BigInt_cpp_106_29, 0
  %SortTranslator_cpp_166_36 = SExt i32 %SortTranslator_cpp_166_35
  %SortTranslator_cpp_166_37 = and i32 %BigInt_cpp_106_34, %SortTranslator_cpp_166_36
  %SortTranslator_cpp_166_38 = or i32 %BigInt_cpp_106_29, %SortTranslator_cpp_166_37
  %SortTranslator_cpp_192_39 = cmpslt i32 %SortTranslator_cpp_166_38, 0
  condbr %SortTranslator_cpp_192_39 %loopSuffix %loopDoneSuffix

loopDoneSuffix:
  %SortTranslator_cpp_233_ = cmpeq ptr %SortTranslator_cpp_214_, %SortTranslator_cpp_224_
  condbr %SortTranslator_cpp_233_ %then %cont

then:
  store int8** %SortTranslator_cpp_214_, %pivotRange, i32 0
  %SortTranslator_cpp_235_ = getelementptr int8* %SortTranslator_cpp_214_, i32 1
  store int8** %SortTranslator_cpp_235_, %pivotRange, i32 1
  return 0

cont:
  %SortTranslator_cpp_240_ = ptrtoint i64 %tuplesEnd
  %SortTranslator_cpp_240_40 = ptrtoint i64 %tuples
  %CodeGen_cpp_1523_41 = sub i64 %SortTranslator_cpp_240_, %SortTranslator_cpp_240_40
  %CodeGen_cpp_1525_42 = sdiv i64 %CodeGen_cpp_1523_41, 8
  %SortTranslator_cpp_240_43 = sub i64 %CodeGen_cpp_1525_42, 1
  %SortTranslator_cpp_240_44 = ashr i64 %SortTranslator_cpp_240_43, 1
  %SortTranslator_cpp_240_45 = getelementptr int8* %tuples, %SortTranslator_cpp_240_44
  %SortTranslator_cpp_196_ = load int8* %SortTranslator_cpp_240_45
  %SortTranslator_cpp_197_ = load int8* %SortTranslator_cpp_224_
  store int8* %SortTranslator_cpp_197_, %SortTranslator_cpp_240_45
  store int8* %SortTranslator_cpp_196_, %SortTranslator_cpp_224_
  %SortTranslator_cpp_245_ = cmpult ptr %SortTranslator_cpp_214_, %SortTranslator_cpp_224_
  condbr %SortTranslator_cpp_245_ %loopBody %loopDoneBody

loopBody:
  %iter = phi ptr [%SortTranslator_cpp_214_, %cont %SortTranslator_cpp_254_, %loopBody]
  %writer = phi ptr [%SortTranslator_cpp_214_, %cont %SortTranslator_cpp_252_66, %loopBody]
  %SortTranslator_cpp_248_ = load int8* %writer
  %SortTranslator_cpp_248_46 = load int8* %iter
  %MaterializationHelper_cpp_230_47 = load int64 %SortTranslator_cpp_248_46
  %MaterializationHelper_cpp_229_48 = getelementptr int8 %SortTranslator_cpp_248_46, i64 8
  %MaterializationHelper_cpp_230_49 = load int64 %MaterializationHelper_cpp_229_48
  store int8* %SortTranslator_cpp_248_46, %writer
  %BigInt_cpp_106_51 = cmpslt i64 %MaterializationHelper_cpp_230_, %MaterializationHelper_cpp_230_47
  %BigInt_cpp_106_52 = zext i32 %BigInt_cpp_106_51
  %BigInt_cpp_106_53 = cmpslt i64 %MaterializationHelper_cpp_230_47, %MaterializationHelper_cpp_230_
  %BigInt_cpp_106_54 = zext i32 %BigInt_cpp_106_53
  %BigInt_cpp_106_55 = sub i32 %BigInt_cpp_106_54, %BigInt_cpp_106_52
  %BigInt_cpp_106_56 = cmpslt i64 %MaterializationHelper_cpp_230_4, %MaterializationHelper_cpp_230_49
  %BigInt_cpp_106_57 = zext i32 %BigInt_cpp_106_56
  %BigInt_cpp_106_58 = cmpslt i64 %MaterializationHelper_cpp_230_49, %MaterializationHelper_cpp_230_4
  %BigInt_cpp_106_59 = zext i32 %BigInt_cpp_106_58
  %BigInt_cpp_106_60 = sub i32 %BigInt_cpp_106_59, %BigInt_cpp_106_57
  %SortTranslator_cpp_166_61 = cmpeq i32 %BigInt_cpp_106_55, 0
  %SortTranslator_cpp_166_62 = SExt i32 %SortTranslator_cpp_166_61
  %SortTranslator_cpp_166_63 = and i32 %BigInt_cpp_106_60, %SortTranslator_cpp_166_62
  %SortTranslator_cpp_166_64 = or i32 %BigInt_cpp_106_55, %SortTranslator_cpp_166_63
  %SortTranslator_cpp_192_65 = cmpslt i32 %SortTranslator_cpp_166_64, 0
  %SortTranslator_cpp_252_ = zext i64 %SortTranslator_cpp_192_65
  %SortTranslator_cpp_252_66 = getelementptr int8* %writer, %SortTranslator_cpp_252_
  store int8* %SortTranslator_cpp_248_, %iter
  %SortTranslator_cpp_254_ = getelementptr int8* %iter, i32 1
  %SortTranslator_cpp_255_ = cmpult ptr %SortTranslator_cpp_254_, %SortTranslator_cpp_224_
  condbr %SortTranslator_cpp_255_ %loopBody %loopDoneBody

loopDoneBody:
  %6821 = phi ptr [%SortTranslator_cpp_214_, %cont %SortTranslator_cpp_252_66, %loopBody]
  %SortTranslator_cpp_196_67 = load int8* %6821
  %SortTranslator_cpp_197_68 = load int8* %SortTranslator_cpp_224_
  store int8* %SortTranslator_cpp_197_68, %6821
  store int8* %SortTranslator_cpp_196_67, %SortTranslator_cpp_224_
  store int8** %6821, %pivotRange, i32 0
  %SortTranslator_cpp_261_ = getelementptr int8* %6821, i32 1
  store int8** %SortTranslator_cpp_261_, %pivotRange, i32 1
  return 0
}

declare void @umbra::RelationMapped::Reader::init(void*)(int8* %7161)

declare void @umbra::ChainingHashTable::init(void*, unsigned int)(int8* %7361, int32 %7375)

declare void @umbra::AggregationTarget::init(umbra::AggregationTarget*, unsigned long)(object umbra::AggregationTarget* %7500, int64 %7514)

declare void @umbra::SortOperator::init(umbra::SortOperator*, void const*, void const*)(object umbra::SortOperator* %7887, int8* %7901, int8* %7915)

define int32 @_9_planStep(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_221_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 128
  call void umbra::TableScanOperator::Job::init(void*, void*, unsigned long, umbra::Relation::RestrictionInfo*, unsigned long, unsigned int*, unsigned int) (%CompilationContext_cpp_221_, %CompilationContext_cpp_215_, i64 3, global %8099, i64 0, global %8137, i32 1)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 112, i32 2, i32 3, i32 4)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 5)
  return 6
}

declare void @umbra::TableScanOperator::Job::init(void*, void*, unsigned long, umbra::Relation::RestrictionInfo*, unsigned long, unsigned int*, unsigned int)(int8* %8236, int8* %8250, int64 %8264, object umbra::Relation::RestrictionInfo* %8278, int64 %8292, int32* %8306, int32 %8320)

declare void @umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int)(int8* %8406, int32 %8420, int32 %8434, int32 %8448, int32 %8462)

define int32 @_9_planStep0(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 32
  call void umbra::ChainingHashTable::Collector::init(void*) (%Pipeline_cpp_276_)
  return 0
}

declare void @umbra::ChainingHashTable::Collector::init(void*)(int8* %8620)

define int32 @_9_planStep1(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 32
  call void umbra::ChainingHashTable::Collector::destroy(void*) (%Pipeline_cpp_276_)
  return 0
}

declare void @umbra::ChainingHashTable::Collector::destroy(void*)(int8* %8772)

define int32 @_9_planStep2(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

declare void @umbra::ExecutionPlan::setupParallelStep(void*, unsigned int)(int8* %8904, int32 %8918)

define int32 @_9_join_tablescan_customer(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 0
  %to = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 1
  %reader = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 2
  %data = load object umbra::RelationMapped::Reader %reader, i32 0, i32 1
  %RelationMappedLogic_cpp_343_ = cmpult i64 %from, %to
  condbr %RelationMappedLogic_cpp_343_ %loopBlocks %loopDoneBlocks

loopBlocks:
  %firstTid = phi i64 [%from, %body %RelationMappedLogic_cpp_348_1, %loopDoneTuples]
  %RelationMappedLogic_cpp_346_ = lshr i64 %firstTid, 16
  %RelationMappedLogic_cpp_347_ = shl i64 %RelationMappedLogic_cpp_346_, 16
  %RelationMappedLogic_cpp_347_0 = add i64 %RelationMappedLogic_cpp_347_, 65536
  %RelationMappedLogic_cpp_348_ = cmpult i64 %to, %RelationMappedLogic_cpp_347_0
  %RelationMappedLogic_cpp_348_1 = select i64 %RelationMappedLogic_cpp_348_, %to, %RelationMappedLogic_cpp_347_0
  %RelationMappedLogic_cpp_350_ = mul i64 %RelationMappedLogic_cpp_346_, 96
  %RelationMappedLogic_cpp_350_2 = mul i64 %RelationMappedLogic_cpp_350_, 65536
  %RelationMappedLogic_cpp_350_3 = getelementptr int8 %data, %RelationMappedLogic_cpp_350_2
  %RelationMappedLogic_cpp_351_ = shl i64 %RelationMappedLogic_cpp_346_, 16
  %RelationMappedLogic_cpp_352_ = sub i64 %firstTid, %RelationMappedLogic_cpp_351_
  %RelationMappedLogic_cpp_352_4 = sub i64 %RelationMappedLogic_cpp_348_1, %RelationMappedLogic_cpp_351_
  %RelationMappedLogic_cpp_354_ = cmpne i64 %RelationMappedLogic_cpp_352_, %RelationMappedLogic_cpp_352_4
  condbr %RelationMappedLogic_cpp_354_ %loopTuples %loopDoneTuples

loopTuples:
  %localTid = phi i64 [%RelationMappedLogic_cpp_352_, %loopBlocks %RelationMappedLogic_cpp_361_, %contScan]
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 32
  %RelationMappedLogic_cpp_313_ = load int32 %RelationMappedLogic_cpp_350_3, %localTid
  %Hash_cpp_264_ = zext i64 %RelationMappedLogic_cpp_313_
  %Hash_cpp_374_ = crc32 i64 5961697176435608501, %Hash_cpp_264_
  %Hash_cpp_375_ = crc32 i64 2231409791114444147, %Hash_cpp_264_
  %Hash_cpp_379_ = rotr i64 %Hash_cpp_375_, 32
  %Hash_cpp_379_5 = xor i64 %Hash_cpp_374_, %Hash_cpp_379_
  %Hash_cpp_379_6 = mul i64 %Hash_cpp_379_5, 2685821657736338717
  %ChainingHashTableLogic_cpp_78_ = call ptr umbra::ChainingHashTable::Collector::collect(unsigned long, unsigned long) (%Pipeline_cpp_276_, %Hash_cpp_379_6, i64 5)
  store int32 %RelationMappedLogic_cpp_313_, %ChainingHashTableLogic_cpp_78_
  %MaterializationHelper_cpp_161_ = getelementptr int8 %ChainingHashTableLogic_cpp_78_, i64 4
  store int8 i8 0, %MaterializationHelper_cpp_161_
  br %contScan

contScan:
  %RelationMappedLogic_cpp_361_ = add i64 %localTid, 1
  %RelationMappedLogic_cpp_362_ = cmpne i64 %RelationMappedLogic_cpp_361_, %RelationMappedLogic_cpp_352_4
  condbr %RelationMappedLogic_cpp_362_ %loopTuples %loopDoneTuples

loopDoneTuples:
  %RelationMappedLogic_cpp_364_ = cmpne i64 %RelationMappedLogic_cpp_348_1, %to
  condbr %RelationMappedLogic_cpp_364_ %loopBlocks %loopDoneBlocks

loopDoneBlocks:
  br %stepDone

stepDone:
  return 5
}

declare int8* @umbra::ChainingHashTable::Collector::collect(unsigned long, unsigned long)(object umbra::ChainingHashTable::Collector* %10265, int64 %10279, int64 %10293)

define int32 @_9_planStep3(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_221_ = getelementptr int8 %state, i64 56
  call void umbra::TableScanOperator::Job::destroy(void*) (%CompilationContext_cpp_221_)
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::prepareForInsertEntries(void*, unsigned int) (%CompilationContext_cpp_215_, %state, i32 32)
  call void umbra::ExecutionPlan::preparePerObjectWork(void*, unsigned int) (%state, i32 32)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 8)
  return 7
}

declare void @umbra::TableScanOperator::Job::destroy(void*)(int8* %10776)

declare void @umbra::ChainingHashTable::prepareForInsertEntries(void*, unsigned int)(object umbra::ChainingHashTable* %10858, int8* %10872, int32 %10886)

declare void @umbra::ExecutionPlan::preparePerObjectWork(void*, unsigned int)(int8* %10926, int32 %10940)

define int32 @_9_join_tablescan_customer_extra(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_470_ = load int8* %localState
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::insertEntries(umbra::ChainingHashTable::Collector&) (%CompilationContext_cpp_215_, %Pipeline_cpp_470_)
  br %stepDone

stepDone:
  return 8
}

declare void @umbra::ChainingHashTable::insertEntries(umbra::ChainingHashTable::Collector&)(object umbra::ChainingHashTable* %11174, object umbra::ChainingHashTable::Collector* %11188)

define int32 @_9_planStep4(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::finishPerObjectWork(void*) (%state)
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  %CompilationContext_cpp_221_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 224
  call void umbra::TableScanOperator::Job::init(void*, void*, unsigned long, umbra::Relation::RestrictionInfo*, unsigned long, unsigned int*, unsigned int) (%CompilationContext_cpp_221_, %CompilationContext_cpp_215_, i64 4, global %8099, i64 0, global %11428, i32 3)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 28745, i32 9, i32 10, i32 11)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 12)
  return 13
}

declare void @umbra::ExecutionPlan::finishPerObjectWork(void*)(int8* %11314)

declare void @umbra::ExecutionPlan::cleanupParallelWork(void*)(int8* %11346)

define int32 @_9_planStep5(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 32
  call void umbra::Preaggregation::init(umbra::Preaggregation*, unsigned long) (%Pipeline_cpp_276_, i64 12)
  return 0
}

declare void @umbra::Preaggregation::init(umbra::Preaggregation*, unsigned long)(object umbra::Preaggregation* %11748, int64 %11762)

define int32 @_9_planStep6(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 32
  call void umbra::Preaggregation::destroy(umbra::Preaggregation*) (%Pipeline_cpp_276_)
  return 0
}

declare void @umbra::Preaggregation::destroy(umbra::Preaggregation*)(object umbra::Preaggregation* %11918)

define int32 @_9_planStep7(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_groupby_join_tablescan_orders(int8* %trampoline, int8* %state, int8* %localState) [
  int8 %13892
] {
body:
  %from = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 0
  %to = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 1
  %reader = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 2
  %data = load object umbra::RelationMapped::Reader %reader, i32 0, i32 1
  %strings = load object umbra::RelationMapped::Reader %reader, i32 0, i32 2
  %RelationMappedLogic_cpp_341_ = ptrtoint i64 %strings
  %RelationMappedLogic_cpp_343_ = cmpult i64 %from, %to
  %transaction = load object umbra::GlobalStateHeader %state, i32 0, i32 0
  %canceled = getelementptr object umbra::Transaction %transaction, i32 0, i32 2
  condbr %RelationMappedLogic_cpp_343_ %loopBlocks %loopDoneBlocks

loopBlocks:
  %firstTid = phi i64 [%from, %body %RelationMappedLogic_cpp_348_1, %loopDoneTuples]
  %RelationMappedLogic_cpp_346_ = lshr i64 %firstTid, 16
  %RelationMappedLogic_cpp_347_ = shl i64 %RelationMappedLogic_cpp_346_, 16
  %RelationMappedLogic_cpp_347_0 = add i64 %RelationMappedLogic_cpp_347_, 65536
  %RelationMappedLogic_cpp_348_ = cmpult i64 %to, %RelationMappedLogic_cpp_347_0
  %RelationMappedLogic_cpp_348_1 = select i64 %RelationMappedLogic_cpp_348_, %to, %RelationMappedLogic_cpp_347_0
  %RelationMappedLogic_cpp_350_ = mul i64 %RelationMappedLogic_cpp_346_, 76
  %RelationMappedLogic_cpp_350_2 = mul i64 %RelationMappedLogic_cpp_350_, 65536
  %RelationMappedLogic_cpp_350_3 = getelementptr int8 %data, %RelationMappedLogic_cpp_350_2
  %RelationMappedLogic_cpp_351_ = shl i64 %RelationMappedLogic_cpp_346_, 16
  %RelationMappedLogic_cpp_352_ = sub i64 %firstTid, %RelationMappedLogic_cpp_351_
  %RelationMappedLogic_cpp_352_4 = sub i64 %RelationMappedLogic_cpp_348_1, %RelationMappedLogic_cpp_351_
  %RelationMappedLogic_cpp_354_ = cmpne i64 %RelationMappedLogic_cpp_352_, %RelationMappedLogic_cpp_352_4
  condbr %RelationMappedLogic_cpp_354_ %loopTuples %loopDoneTuples

loopTuples:
  %localTid = phi i64 [%RelationMappedLogic_cpp_352_, %loopBlocks %RelationMappedLogic_cpp_361_, %contScan]
  %RelationMappedLogic_cpp_308_ = getelementptr int8 %RelationMappedLogic_cpp_350_3, i64 3932160
  %RelationMappedLogic_cpp_324_ = getelementptr data128 %RelationMappedLogic_cpp_308_, %localTid
  %RelationMappedLogic_cpp_325_ = load int64 %RelationMappedLogic_cpp_324_
  %RelationMappedLogic_cpp_325_5 = load int64 %RelationMappedLogic_cpp_324_, i32 1
  %RelationMappedLogic_cpp_326_ = trunc i32 %RelationMappedLogic_cpp_325_
  %RelationMappedLogic_cpp_327_ = cmpult i32 12, %RelationMappedLogic_cpp_326_
  %RelationMappedLogic_cpp_327_6 = add i64 %RelationMappedLogic_cpp_325_5, %RelationMappedLogic_cpp_341_
  %RelationMappedLogic_cpp_327_7 = select i64 %RelationMappedLogic_cpp_327_, %RelationMappedLogic_cpp_327_6, %RelationMappedLogic_cpp_325_5
  %RelationMappedLogic_cpp_329_ = builddata128 d128 %RelationMappedLogic_cpp_325_ %RelationMappedLogic_cpp_327_7
  %Text_cpp_352_ = call bool umbra::TextRuntime::likeProgram(umbra::data128_t, char const*) (%RelationMappedLogic_cpp_329_, global %13581)
  condbr %Text_cpp_352_ %contScan %then

then:
  %RelationMappedLogic_cpp_308_8 = getelementptr int8 %RelationMappedLogic_cpp_350_3, i64 262144
  %RelationMappedLogic_cpp_313_ = load int32 %RelationMappedLogic_cpp_308_8, %localTid
  store int8 i8 0, %13892
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 320
  %Hash_cpp_264_ = zext i64 %RelationMappedLogic_cpp_313_
  %Hash_cpp_374_ = crc32 i64 5961697176435608501, %Hash_cpp_264_
  %Hash_cpp_375_ = crc32 i64 2231409791114444147, %Hash_cpp_264_
  %Hash_cpp_379_ = rotr i64 %Hash_cpp_375_, 32
  %Hash_cpp_379_9 = xor i64 %Hash_cpp_374_, %Hash_cpp_379_
  %Hash_cpp_379_10 = mul i64 %Hash_cpp_379_9, 2685821657736338717
  %ChainingHashTableLogic_cpp_108_ = call ptr umbra::ChainingHashTable::lookup(unsigned long) (%CompilationContext_cpp_215_, %Hash_cpp_379_10)
  %ChainingHashTableLogic_cpp_110_ = isnotnull ptr %ChainingHashTableLogic_cpp_108_
  condbr %ChainingHashTableLogic_cpp_110_ %looploopHashChain %loopDoneloopHashChain

looploopHashChain:
  %hashEntry = phi ptr [%ChainingHashTableLogic_cpp_108_, %then %ChainingHashTableLogic_cpp_136_, %continueProbe]
  %ChainingHashTableLogic_cpp_115_ = getelementptr int8 %hashEntry, i64 16
  %MaterializationHelper_cpp_230_ = load int32 %ChainingHashTableLogic_cpp_115_
  %MaterializationHelper_cpp_233_ = getelementptr int8 %ChainingHashTableLogic_cpp_115_, i64 4
  %Integer_cpp_80_ = cmpeq i32 %RelationMappedLogic_cpp_313_, %MaterializationHelper_cpp_230_
  condbr %Integer_cpp_80_ %else %checkCancellation

else:
  %HashJoinTranslator_cpp_703_ = load int8 %MaterializationHelper_cpp_233_
  %HashJoinTranslator_cpp_703_11 = cmpeq i8 %HashJoinTranslator_cpp_703_, 0
  condbr %HashJoinTranslator_cpp_703_11 %then12 %cont

then12:
  store int8 i8 2, %MaterializationHelper_cpp_233_
  br %cont

cont:
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 28736
  store int32 %MaterializationHelper_cpp_230_, %Pipeline_cpp_276_
  %RelationMappedLogic_cpp_313_13 = load int32 %RelationMappedLogic_cpp_350_3, %localTid
  %Pipeline_cpp_276_14 = getelementptr int8 %localState, i64 28736
  %MaterializationHelper_cpp_726_ = getelementptr int8 %Pipeline_cpp_276_14, i64 8
  %MaterializationHelper_cpp_727_ = load int8 %MaterializationHelper_cpp_726_
  %MaterializationHelper_cpp_752_ = and i8 %MaterializationHelper_cpp_727_, -2
  %MaterializationHelper_cpp_983_ = getelementptr int8 %Pipeline_cpp_276_14, i64 4
  store int32 %RelationMappedLogic_cpp_313_13, %MaterializationHelper_cpp_983_
  store int8 %MaterializationHelper_cpp_752_, %MaterializationHelper_cpp_726_
  %15125 = call bool _9_joined (%state, %localState)
  br %checkCancellation

checkCancellation:
  %ChainingHashTableLogic_cpp_129_ = atomicload int8 %canceled
  %ChainingHashTableLogic_cpp_129_15 = cmpne i8 %ChainingHashTableLogic_cpp_129_, 0
  condbr %ChainingHashTableLogic_cpp_129_15 %cancellation %continueProbe

continueProbe:
  %ChainingHashTableLogic_cpp_136_ = call ptr umbra::ChainingHashTable::lookupNext(void*) (%CompilationContext_cpp_215_, %hashEntry)
  %ChainingHashTableLogic_cpp_137_ = isnotnull ptr %ChainingHashTableLogic_cpp_136_
  condbr %ChainingHashTableLogic_cpp_137_ %looploopHashChain %loopDoneloopHashChain

loopDoneloopHashChain:
  br %contScan

contScan:
  %RelationMappedLogic_cpp_361_ = add i64 %localTid, 1
  %RelationMappedLogic_cpp_362_ = cmpne i64 %RelationMappedLogic_cpp_361_, %RelationMappedLogic_cpp_352_4
  condbr %RelationMappedLogic_cpp_362_ %loopTuples %loopDoneTuples

loopDoneTuples:
  %RelationMappedLogic_cpp_364_ = cmpne i64 %RelationMappedLogic_cpp_348_1, %to
  condbr %RelationMappedLogic_cpp_364_ %loopBlocks %loopDoneBlocks

loopDoneBlocks:
  br %stepDone

stepDone:
  return 12

cancellation:
  call void umbra::RuntimeFunctions::checkForCancellation() ()
  unreachable
}

declare bool @umbra::TextRuntime::likeProgram(umbra::data128_t, char const*)(data128 %13670, int8* %13684)

declare int8* @umbra::ChainingHashTable::lookup(unsigned long)(object umbra::ChainingHashTable* %14153, int64 %14167)

declare void @umbra::RuntimeFunctions::checkForCancellation()()

declare int8* @umbra::ChainingHashTable::lookupNext(void*)(object umbra::ChainingHashTable* %15366, int8* %15380)

define int32 @_9_planStep8(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_221_ = getelementptr int8 %state, i64 56
  call void umbra::TableScanOperator::Job::destroy(void*) (%CompilationContext_cpp_221_)
  %CompilationContext_cpp_221_0 = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::ScanJob::init(void*, void*) (%CompilationContext_cpp_221_0, %CompilationContext_cpp_215_)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 15)
  return 14
}

declare void @umbra::ChainingHashTable::ScanJob::init(void*, void*)(int8* %15942, int8* %15956)

define int32 @_9_groupby_join_tablescan_orders_extra(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 28736
  %MaterializationHelper_cpp_726_ = getelementptr int8 %Pipeline_cpp_276_, i64 8
  %MaterializationHelper_cpp_727_ = load int8 %MaterializationHelper_cpp_726_
  %MaterializationHelper_cpp_750_ = or i8 %MaterializationHelper_cpp_727_, 1
  store int8 %MaterializationHelper_cpp_750_, %MaterializationHelper_cpp_726_
  %from = load object umbra::ChainingHashTable::ScanMorsel %localState, i32 0, i32 0
  %to = load object umbra::ChainingHashTable::ScanMorsel %localState, i32 0, i32 1
  %ChainingHashTableLogic_cpp_161_ = cmpne ptr %from, %to
  condbr %ChainingHashTableLogic_cpp_161_ %loopSlots %loopDoneSlots

loopSlots:
  %slot = phi ptr [%from, %body %ChainingHashTableLogic_cpp_185_, %loopDoneEntries]
  %ChainingHashTableLogic_cpp_164_ = load int64 %slot
  %ChainingHashTableLogic_cpp_166_ = lshr i64 %ChainingHashTableLogic_cpp_164_, 16
  %ChainingHashTableLogic_cpp_167_ = inttoptr ptr %ChainingHashTableLogic_cpp_166_
  %ChainingHashTableLogic_cpp_168_ = isnotnull ptr %ChainingHashTableLogic_cpp_167_
  condbr %ChainingHashTableLogic_cpp_168_ %loopEntries %loopDoneEntries

loopEntries:
  %entry = phi ptr [%ChainingHashTableLogic_cpp_167_, %loopSlots %ChainingHashTableLogic_cpp_181_5, %continue]
  %ChainingHashTableLogic_cpp_174_ = getelementptr int8 %entry, i64 16
  %MaterializationHelper_cpp_230_ = load int32 %ChainingHashTableLogic_cpp_174_
  %MaterializationHelper_cpp_233_ = getelementptr int8 %ChainingHashTableLogic_cpp_174_, i64 4
  %HashJoinTranslator_cpp_353_ = load int8 %MaterializationHelper_cpp_233_
  %HashJoinTranslator_cpp_370_ = cmpeq i8 %HashJoinTranslator_cpp_353_, 0
  condbr %HashJoinTranslator_cpp_370_ %then %cont

then:
  %Pipeline_cpp_276_0 = getelementptr int8 %localState, i64 28736
  %MaterializationHelper_cpp_726_1 = getelementptr int8 %Pipeline_cpp_276_0, i64 8
  %MaterializationHelper_cpp_727_2 = load int8 %MaterializationHelper_cpp_726_1
  %MaterializationHelper_cpp_750_3 = or i8 %MaterializationHelper_cpp_727_2, 1
  store int8 %MaterializationHelper_cpp_750_3, %MaterializationHelper_cpp_726_1
  %Pipeline_cpp_276_4 = getelementptr int8 %localState, i64 28736
  store int32 %MaterializationHelper_cpp_230_, %Pipeline_cpp_276_4
  %17246 = call bool _9_joined (%state, %localState)
  br %cont

cont:
  br %continue

continue:
  %ChainingHashTableLogic_cpp_181_ = getelementptr int8 %entry, i64 8
  %ChainingHashTableLogic_cpp_181_5 = load int8* %ChainingHashTableLogic_cpp_181_
  %ChainingHashTableLogic_cpp_182_ = isnotnull ptr %ChainingHashTableLogic_cpp_181_5
  condbr %ChainingHashTableLogic_cpp_182_ %loopEntries %loopDoneEntries

loopDoneEntries:
  %ChainingHashTableLogic_cpp_185_ = getelementptr int64 %slot, i32 1
  %ChainingHashTableLogic_cpp_186_ = cmpne ptr %ChainingHashTableLogic_cpp_185_, %to
  condbr %ChainingHashTableLogic_cpp_186_ %loopSlots %loopDoneSlots

loopDoneSlots:
  br %stepDone

stepDone:
  return 15
}

define int32 @_9_planStep9(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 368
  call void umbra::AggregationTarget::exchangeTables(void*, unsigned long) (%CompilationContext_cpp_215_, %state, i64 32)
  %CompilationContext_cpp_221_ = getelementptr int8 %state, i64 56
  call void umbra::AggregationTarget::setupAggregateJob(void*) (%CompilationContext_cpp_215_, %CompilationContext_cpp_221_)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 17)
  return 16
}

declare void @umbra::AggregationTarget::exchangeTables(void*, unsigned long)(object umbra::AggregationTarget* %17711, int8* %17725, int64 %17739)

declare void @umbra::AggregationTarget::setupAggregateJob(void*)(object umbra::AggregationTarget* %17829, int8* %17843)

define int32 @_9_groupby_join_tablescan_orders_extra10(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %PreaggregationLogic_cpp_47_ = load object umbra::AggregationTarget::Fragment* %localState
  %chunks = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 3
  %PreaggregationLogic_cpp_50_ = isnotnull ptr %chunks
  condbr %PreaggregationLogic_cpp_50_ %loopChunk %loopDoneChunk

loopChunk:
  %chunk = phi ptr [%chunks, %body %next5, %loopDoneChunkEntries]
  call void umbra::AggregationTarget::Fragment::checkSize() (%PreaggregationLogic_cpp_47_)
  %hashTable = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 0
  %hashTableShift = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 1
  %PreaggregationLogic_cpp_60_ = getelementptr object umbra::Preaggregation::EntryChunk %chunk, i32 1
  %limit = load object umbra::Preaggregation::EntryChunk %chunk, i32 0, i32 1
  %PreaggregationLogic_cpp_62_ = cmpne ptr %PreaggregationLogic_cpp_60_, %limit
  condbr %PreaggregationLogic_cpp_62_ %loopChunkEntries %loopDoneChunkEntries

loopChunkEntries:
  %entry = phi ptr [%PreaggregationLogic_cpp_60_, %loopChunk %PreaggregationLogic_cpp_110_, %continue]
  %hash = load object umbra::Preaggregation::EntryHeader %entry, i32 0, i32 0
  %PreaggregationLogic_cpp_67_ = lshr i64 %hash, %hashTableShift
  %PreaggregationLogic_cpp_67_0 = getelementptr object umbra::Preaggregation::EntryHeader* %hashTable, %PreaggregationLogic_cpp_67_
  %PreaggregationLogic_cpp_69_ = load object umbra::Preaggregation::EntryHeader* %PreaggregationLogic_cpp_67_0
  %PreaggregationLogic_cpp_71_ = isnotnull ptr %PreaggregationLogic_cpp_69_
  condbr %PreaggregationLogic_cpp_71_ %loopChain %loopDoneChain

loopChain:
  %chainEntry = phi ptr [%PreaggregationLogic_cpp_69_, %loopChunkEntries %next, %noMatch]
  %hash1 = load object umbra::Preaggregation::EntryHeader %chainEntry, i32 0, i32 0
  %PreaggregationLogic_cpp_75_ = cmpeq i64 %hash, %hash1
  condbr %PreaggregationLogic_cpp_75_ %then %noMatch

then:
  %GroupByTranslator_cpp_176_ = getelementptr object umbra::Preaggregation::EntryHeader %entry, i32 1
  %MaterializationHelper_cpp_876_ = load int32 %GroupByTranslator_cpp_176_
  %GroupByTranslator_cpp_177_ = getelementptr object umbra::Preaggregation::EntryHeader %chainEntry, i32 1
  %MaterializationHelper_cpp_876_2 = load int32 %GroupByTranslator_cpp_177_
  %Integer_cpp_80_ = cmpeq i32 %MaterializationHelper_cpp_876_, %MaterializationHelper_cpp_876_2
  condbr %Integer_cpp_80_ %else %noMatch

else:
  %GroupByTranslator_cpp_185_ = getelementptr int8 %entry, i64 20
  %GroupByTranslator_cpp_185_3 = getelementptr int8 %chainEntry, i64 20
  %MaterializationHelper_cpp_977_ = load int64 %GroupByTranslator_cpp_185_3
  %MaterializationHelper_cpp_977_4 = load int64 %GroupByTranslator_cpp_185_
  %Aggregate_cpp_222_ = add i64 %MaterializationHelper_cpp_977_, %MaterializationHelper_cpp_977_4
  store int64 %Aggregate_cpp_222_, %GroupByTranslator_cpp_185_3
  br %continue

noMatch:
  %next = load object umbra::Preaggregation::EntryHeader %chainEntry, i32 0, i32 1
  %PreaggregationLogic_cpp_83_ = isnotnull ptr %next
  condbr %PreaggregationLogic_cpp_83_ %loopChain %loopDoneChain

loopDoneChain:
  store object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_69_, %entry, i32 0, i32 1
  store object umbra::Preaggregation::EntryHeader* %entry, %PreaggregationLogic_cpp_67_0
  %count = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 2
  %PreaggregationLogic_cpp_90_ = add i64 %count, 1
  store object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_90_, %PreaggregationLogic_cpp_47_, i32 0, i32 2
  br %continue

continue:
  %PreaggregationLogic_cpp_110_ = getelementptr int8 %entry, i64 28
  %PreaggregationLogic_cpp_111_ = cmpne ptr %PreaggregationLogic_cpp_110_, %limit
  condbr %PreaggregationLogic_cpp_111_ %loopChunkEntries %loopDoneChunkEntries

loopDoneChunkEntries:
  %next5 = load object umbra::Preaggregation::EntryChunk %chunk, i32 0, i32 0
  %PreaggregationLogic_cpp_116_ = isnotnull ptr %next5
  condbr %PreaggregationLogic_cpp_116_ %loopChunk %loopDoneChunk

loopDoneChunk:
  store object umbra::AggregationTarget::Fragment ptr 0, %PreaggregationLogic_cpp_47_, i32 0, i32 3
  br %stepDone

stepDone:
  return 17
}

declare void @umbra::AggregationTarget::Fragment::checkSize()(object umbra::AggregationTarget::Fragment* %18158)

define int32 @_9_planStep11(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  %CompilationContext_cpp_221_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 368
  call void umbra::AggregationTarget::setupScanJob(void*) (%CompilationContext_cpp_215_, %CompilationContext_cpp_221_)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 28736, i32 18, i32 19, i32 20)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 21)
  return 22
}

declare void @umbra::AggregationTarget::setupScanJob(void*)(object umbra::AggregationTarget* %20073, int8* %20087)

define int32 @_9_planStep12(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 32
  call void umbra::Preaggregation::init(umbra::Preaggregation*, unsigned long) (%Pipeline_cpp_276_, i64 16)
  return 0
}

define int32 @_9_planStep13(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 32
  call void umbra::Preaggregation::destroy(umbra::Preaggregation*) (%Pipeline_cpp_276_)
  return 0
}

define int32 @_9_planStep14(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_groupby_groupby(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::AggregationTarget::ScanMorsel %localState, i32 0, i32 0
  %to = load object umbra::AggregationTarget::ScanMorsel %localState, i32 0, i32 1
  %PreaggregationLogic_cpp_130_ = cmpne ptr %from, %to
  condbr %PreaggregationLogic_cpp_130_ %loopSlots %loopDoneSlots

loopSlots:
  %slot = phi ptr [%from, %body %PreaggregationLogic_cpp_146_, %loopDoneChain]
  %PreaggregationLogic_cpp_135_ = load object umbra::Preaggregation::EntryHeader* %slot
  %PreaggregationLogic_cpp_136_ = isnotnull ptr %PreaggregationLogic_cpp_135_
  condbr %PreaggregationLogic_cpp_136_ %loopChain %loopDoneChain

loopChain:
  %iter = phi ptr [%PreaggregationLogic_cpp_135_, %loopSlots %next, %cont]
  %PreaggregationLogic_cpp_140_ = getelementptr int8 %iter, i64 16
  %GroupByTranslator_cpp_411_ = getelementptr int8 %PreaggregationLogic_cpp_140_, i64 4
  %MaterializationHelper_cpp_977_ = load int64 %GroupByTranslator_cpp_411_
  %Hash_cpp_374_ = crc32 i64 5961697176435608501, %MaterializationHelper_cpp_977_
  %Hash_cpp_375_ = crc32 i64 2231409791114444147, %MaterializationHelper_cpp_977_
  %Hash_cpp_379_ = rotr i64 %Hash_cpp_375_, 32
  %Hash_cpp_379_0 = xor i64 %Hash_cpp_374_, %Hash_cpp_379_
  %Hash_cpp_379_1 = mul i64 %Hash_cpp_379_0, 2685821657736338717
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 32
  %hashTable = getelementptr object umbra::Preaggregation %Pipeline_cpp_276_, i32 0, i32 0, i32 0
  %PreaggregationLogic_cpp_20_ = and i64 %Hash_cpp_379_1, 1023
  %PreaggregationLogic_cpp_20_2 = load object umbra::Preaggregation::EntryHeader* %hashTable, %PreaggregationLogic_cpp_20_
  %hash = load object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_20_2, i32 0, i32 0
  %PreaggregationLogic_cpp_25_ = cmpne i64 %hash, %Hash_cpp_379_1
  condbr %PreaggregationLogic_cpp_25_ %then %else

then:
  %PreaggregationLogic_cpp_29_ = call ptr umbra::Preaggregation::addEntry(unsigned long) (%Pipeline_cpp_276_, %Hash_cpp_379_1)
  store int64 %MaterializationHelper_cpp_977_, %PreaggregationLogic_cpp_29_
  %GroupByTranslator_cpp_368_ = getelementptr int8 %PreaggregationLogic_cpp_29_, i64 8
  store int64 i64 1, %GroupByTranslator_cpp_368_
  br %cont

else:
  %PreaggregationLogic_cpp_36_ = getelementptr object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_20_2, i32 1
  %MaterializationHelper_cpp_876_3 = load int64 %PreaggregationLogic_cpp_36_
  %BigInt_cpp_96_ = cmpeq i64 %MaterializationHelper_cpp_977_, %MaterializationHelper_cpp_876_3
  condbr %BigInt_cpp_96_ %else4 %then

else4:
  %GroupByTranslator_cpp_378_ = getelementptr int8 %PreaggregationLogic_cpp_36_, i64 8
  %MaterializationHelper_cpp_977_5 = load int64 %GroupByTranslator_cpp_378_
  %Aggregate_cpp_173_ = add i64 %MaterializationHelper_cpp_977_5, 1
  store int64 %Aggregate_cpp_173_, %GroupByTranslator_cpp_378_
  br %cont

cont:
  %next = load object umbra::Preaggregation::EntryHeader %iter, i32 0, i32 1
  %PreaggregationLogic_cpp_143_ = isnotnull ptr %next
  condbr %PreaggregationLogic_cpp_143_ %loopChain %loopDoneChain

loopDoneChain:
  %PreaggregationLogic_cpp_146_ = getelementptr object umbra::Preaggregation::EntryHeader* %slot, i32 1
  %PreaggregationLogic_cpp_147_ = cmpne ptr %PreaggregationLogic_cpp_146_, %to
  condbr %PreaggregationLogic_cpp_147_ %loopSlots %loopDoneSlots

loopDoneSlots:
  br %stepDone

stepDone:
  return 21
}

define int32 @_9_planStep15(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 24960
  call void umbra::AggregationTarget::exchangeTables(void*, unsigned long) (%CompilationContext_cpp_215_, %state, i64 32)
  %CompilationContext_cpp_221_0 = getelementptr int8 %state, i64 56
  call void umbra::AggregationTarget::setupAggregateJob(void*) (%CompilationContext_cpp_215_, %CompilationContext_cpp_221_0)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 24)
  return 23
}

define int32 @_9_groupby_groupby_extra(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %PreaggregationLogic_cpp_47_ = load object umbra::AggregationTarget::Fragment* %localState
  %chunks = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 3
  %PreaggregationLogic_cpp_50_ = isnotnull ptr %chunks
  condbr %PreaggregationLogic_cpp_50_ %loopChunk %loopDoneChunk

loopChunk:
  %chunk = phi ptr [%chunks, %body %next5, %loopDoneChunkEntries]
  call void umbra::AggregationTarget::Fragment::checkSize() (%PreaggregationLogic_cpp_47_)
  %hashTable = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 0
  %hashTableShift = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 1
  %PreaggregationLogic_cpp_60_ = getelementptr object umbra::Preaggregation::EntryChunk %chunk, i32 1
  %limit = load object umbra::Preaggregation::EntryChunk %chunk, i32 0, i32 1
  %PreaggregationLogic_cpp_62_ = cmpne ptr %PreaggregationLogic_cpp_60_, %limit
  condbr %PreaggregationLogic_cpp_62_ %loopChunkEntries %loopDoneChunkEntries

loopChunkEntries:
  %entry = phi ptr [%PreaggregationLogic_cpp_60_, %loopChunk %PreaggregationLogic_cpp_110_, %continue]
  %hash = load object umbra::Preaggregation::EntryHeader %entry, i32 0, i32 0
  %PreaggregationLogic_cpp_67_ = lshr i64 %hash, %hashTableShift
  %PreaggregationLogic_cpp_67_0 = getelementptr object umbra::Preaggregation::EntryHeader* %hashTable, %PreaggregationLogic_cpp_67_
  %PreaggregationLogic_cpp_69_ = load object umbra::Preaggregation::EntryHeader* %PreaggregationLogic_cpp_67_0
  %PreaggregationLogic_cpp_71_ = isnotnull ptr %PreaggregationLogic_cpp_69_
  condbr %PreaggregationLogic_cpp_71_ %loopChain %loopDoneChain

loopChain:
  %chainEntry = phi ptr [%PreaggregationLogic_cpp_69_, %loopChunkEntries %next, %noMatch]
  %hash1 = load object umbra::Preaggregation::EntryHeader %chainEntry, i32 0, i32 0
  %PreaggregationLogic_cpp_75_ = cmpeq i64 %hash, %hash1
  condbr %PreaggregationLogic_cpp_75_ %then %noMatch

then:
  %GroupByTranslator_cpp_176_ = getelementptr object umbra::Preaggregation::EntryHeader %entry, i32 1
  %MaterializationHelper_cpp_876_ = load int64 %GroupByTranslator_cpp_176_
  %GroupByTranslator_cpp_177_ = getelementptr object umbra::Preaggregation::EntryHeader %chainEntry, i32 1
  %MaterializationHelper_cpp_876_2 = load int64 %GroupByTranslator_cpp_177_
  %BigInt_cpp_96_ = cmpeq i64 %MaterializationHelper_cpp_876_, %MaterializationHelper_cpp_876_2
  condbr %BigInt_cpp_96_ %else %noMatch

else:
  %GroupByTranslator_cpp_185_ = getelementptr int8 %entry, i64 24
  %GroupByTranslator_cpp_185_3 = getelementptr int8 %chainEntry, i64 24
  %MaterializationHelper_cpp_977_ = load int64 %GroupByTranslator_cpp_185_3
  %MaterializationHelper_cpp_977_4 = load int64 %GroupByTranslator_cpp_185_
  %Aggregate_cpp_182_ = add i64 %MaterializationHelper_cpp_977_, %MaterializationHelper_cpp_977_4
  store int64 %Aggregate_cpp_182_, %GroupByTranslator_cpp_185_3
  br %continue

noMatch:
  %next = load object umbra::Preaggregation::EntryHeader %chainEntry, i32 0, i32 1
  %PreaggregationLogic_cpp_83_ = isnotnull ptr %next
  condbr %PreaggregationLogic_cpp_83_ %loopChain %loopDoneChain

loopDoneChain:
  store object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_69_, %entry, i32 0, i32 1
  store object umbra::Preaggregation::EntryHeader* %entry, %PreaggregationLogic_cpp_67_0
  %count = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 2
  %PreaggregationLogic_cpp_90_ = add i64 %count, 1
  store object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_90_, %PreaggregationLogic_cpp_47_, i32 0, i32 2
  br %continue

continue:
  %PreaggregationLogic_cpp_110_ = getelementptr int8 %entry, i64 32
  %PreaggregationLogic_cpp_111_ = cmpne ptr %PreaggregationLogic_cpp_110_, %limit
  condbr %PreaggregationLogic_cpp_111_ %loopChunkEntries %loopDoneChunkEntries

loopDoneChunkEntries:
  %next5 = load object umbra::Preaggregation::EntryChunk %chunk, i32 0, i32 0
  %PreaggregationLogic_cpp_116_ = isnotnull ptr %next5
  condbr %PreaggregationLogic_cpp_116_ %loopChunk %loopDoneChunk

loopDoneChunk:
  store object umbra::AggregationTarget::Fragment ptr 0, %PreaggregationLogic_cpp_47_, i32 0, i32 3
  br %stepDone

stepDone:
  return 24
}

define int32 @_9_planStep16(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  %CompilationContext_cpp_221_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 24960
  call void umbra::AggregationTarget::setupScanJob(void*) (%CompilationContext_cpp_215_, %CompilationContext_cpp_221_)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 232, i32 25, i32 26, i32 27)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 28)
  return 29
}

define int32 @_9_planStep17(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 32
  call void umbra::SortOperator::init(umbra::SortOperator*, void const*, void const*) (%Pipeline_cpp_276_, %state, global %7749)
  return 0
}

define int32 @_9_planStep18(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 32
  call void umbra::SortOperator::destroy(umbra::SortOperator*) (%Pipeline_cpp_276_)
  return 0
}

declare void @umbra::SortOperator::destroy(umbra::SortOperator*)(object umbra::SortOperator* %25092)

define int32 @_9_planStep19(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_sort_groupby(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::AggregationTarget::ScanMorsel %localState, i32 0, i32 0
  %to = load object umbra::AggregationTarget::ScanMorsel %localState, i32 0, i32 1
  %PreaggregationLogic_cpp_130_ = cmpne ptr %from, %to
  condbr %PreaggregationLogic_cpp_130_ %loopSlots %loopDoneSlots

loopSlots:
  %slot = phi ptr [%from, %body %PreaggregationLogic_cpp_146_, %loopDoneChain]
  %PreaggregationLogic_cpp_135_ = load object umbra::Preaggregation::EntryHeader* %slot
  %PreaggregationLogic_cpp_136_ = isnotnull ptr %PreaggregationLogic_cpp_135_
  condbr %PreaggregationLogic_cpp_136_ %loopChain %loopDoneChain

loopChain:
  %iter = phi ptr [%PreaggregationLogic_cpp_135_, %loopSlots %next, %loopChain]
  %PreaggregationLogic_cpp_140_ = getelementptr int8 %iter, i64 16
  %MaterializationHelper_cpp_876_ = load int64 %PreaggregationLogic_cpp_140_
  %GroupByTranslator_cpp_411_ = getelementptr int8 %PreaggregationLogic_cpp_140_, i64 8
  %MaterializationHelper_cpp_876_0 = load int64 %GroupByTranslator_cpp_411_
  %Pipeline_cpp_276_ = getelementptr int8 %localState, i64 32
  %SortTranslator_cpp_492_ = call ptr umbra::SortOperator::storeTuple(unsigned long) (%Pipeline_cpp_276_, i64 16)
  store int64 %MaterializationHelper_cpp_876_0, %SortTranslator_cpp_492_
  %MaterializationHelper_cpp_150_ = getelementptr int8 %SortTranslator_cpp_492_, i64 8
  store int64 %MaterializationHelper_cpp_876_, %MaterializationHelper_cpp_150_
  %next = load object umbra::Preaggregation::EntryHeader %iter, i32 0, i32 1
  %PreaggregationLogic_cpp_143_ = isnotnull ptr %next
  condbr %PreaggregationLogic_cpp_143_ %loopChain %loopDoneChain

loopDoneChain:
  %PreaggregationLogic_cpp_146_ = getelementptr object umbra::Preaggregation::EntryHeader* %slot, i32 1
  %PreaggregationLogic_cpp_147_ = cmpne ptr %PreaggregationLogic_cpp_146_, %to
  condbr %PreaggregationLogic_cpp_147_ %loopSlots %loopDoneSlots

loopDoneSlots:
  br %stepDone

stepDone:
  return 28
}

declare int8* @umbra::SortOperator::storeTuple(unsigned long)(object umbra::SortOperator* %25893, int64 %25907)

define int32 @_9_planStep20(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::preparePerObjectWork(void*, unsigned int) (%state, i32 32)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 31)
  return 30
}

define int32 @_9_sort_groupby_extra(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_470_ = load int8* %localState
  call void umbra::SortOperator::sortLocal() (%Pipeline_cpp_470_)
  br %stepDone

stepDone:
  return 31
}

declare void @umbra::SortOperator::sortLocal()(object umbra::SortOperator* %26637)

define int32 @_9_planStep21(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::finishPerObjectWork(void*) (%state)
  %currentLocalState = load object umbra::GlobalStateHeader %state, i32 0, i32 2
  %threadCount = load object umbra::LocalStateHeader %currentLocalState, i32 0, i32 2
  %localStateSize = load object umbra::LocalStateHeader %currentLocalState, i32 0, i32 0
  %Pipeline_cpp_68_ = getelementptr int8 %currentLocalState, i64 64
  %Pipeline_cpp_55_ = cmpult i32 0, %threadCount
  condbr %Pipeline_cpp_55_ %loopStates %loopDoneStates

loopStates:
  %Thread = phi i32 [i32 0, %body %Pipeline_cpp_96_, %continue]
  %Pipeline_cpp_75_ = zext i64 %Thread
  %Pipeline_cpp_75_0 = mul i64 %Pipeline_cpp_75_, %localStateSize
  %Pipeline_cpp_75_1 = getelementptr int8 %Pipeline_cpp_68_, %Pipeline_cpp_75_0
  %Pipeline_cpp_78_ = load int8 %Pipeline_cpp_75_1, i32 -1
  %Pipeline_cpp_78_2 = cmpeq i8 %Pipeline_cpp_78_, 0
  condbr %Pipeline_cpp_78_2 %continue %else

else:
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 49552
  %Pipeline_cpp_276_ = getelementptr int8 %Pipeline_cpp_75_1, i64 32
  call void umbra::SortOperator::donateTupleMemory(umbra::SortOperator&) (%Pipeline_cpp_276_, %CompilationContext_cpp_215_)
  br %continue

continue:
  %Pipeline_cpp_96_ = add i32 %Thread, 1
  %Pipeline_cpp_97_ = cmpult i32 %Pipeline_cpp_96_, %threadCount
  condbr %Pipeline_cpp_97_ %loopStates %loopDoneStates

loopDoneStates:
  %CompilationContext_cpp_215_3 = getelementptr int8 %state, i64 49552
  call void umbra::SortOperator::prepareSortGlobal() (%CompilationContext_cpp_215_3)
  %CompilationContext_cpp_215_4 = getelementptr int8 %state, i64 49552
  %CompilationContext_cpp_221_ = getelementptr int8 %state, i64 56
  call void umbra::SortOperator::setupGlobalSortJob(void*, umbra::SortOperator&) (%CompilationContext_cpp_221_, %CompilationContext_cpp_215_4)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 33)
  return 32
}

declare void @umbra::SortOperator::donateTupleMemory(umbra::SortOperator&)(object umbra::SortOperator* %27313, object umbra::SortOperator* %27327)

declare void @umbra::SortOperator::prepareSortGlobal()(object umbra::SortOperator* %27504)

declare void @umbra::SortOperator::setupGlobalSortJob(void*, umbra::SortOperator&)(int8* %27637, object umbra::SortOperator* %27651)

define int32 @_9_sort_groupby_extra22(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %SortTranslator_cpp_431_ = load int32 %localState
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 49552
  call void umbra::SortOperator::sortGlobal(unsigned int) (%CompilationContext_cpp_215_, %SortTranslator_cpp_431_)
  br %stepDone

stepDone:
  return 33
}

declare void @umbra::SortOperator::sortGlobal(unsigned int)(object umbra::SortOperator* %27891, int32 %27905)

define int32 @_9_planStep23(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 49552
  call void umbra::SortOperator::finishSortGlobal() (%CompilationContext_cpp_215_)
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  %CompilationContext_cpp_221_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_215_0 = getelementptr int8 %state, i64 49552
  call void umbra::SortOperator::Job::init(void*, umbra::SortOperator&, bool) (%CompilationContext_cpp_221_, %CompilationContext_cpp_215_0, bool true)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 32, i32 34, i32 35, i32 36)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 37)
  return 38
}

declare void @umbra::SortOperator::finishSortGlobal()(object umbra::SortOperator* %28081)

declare void @umbra::SortOperator::Job::init(void*, umbra::SortOperator&, bool)(int8* %28232, object umbra::SortOperator* %28246, bool %28260)

define int32 @_9_planStep24(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_planStep25(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_planStep26(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_map_sort(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::SortOperator::Morsel %localState, i32 0, i32 0
  %to = load object umbra::SortOperator::Morsel %localState, i32 0, i32 1
  %SortTranslator_cpp_511_ = cmpne ptr %from, %to
  condbr %SortTranslator_cpp_511_ %loopTuples %loopDoneTuples

loopTuples:
  %tuple = phi ptr [%from, %body %SortTranslator_cpp_523_, %cont2]
  %CodeGen_hpp_1150_ = load int8* %tuple
  %MaterializationHelper_cpp_230_ = load int64 %CodeGen_hpp_1150_
  %MaterializationHelper_cpp_229_ = getelementptr int8 %CodeGen_hpp_1150_, i64 8
  %MaterializationHelper_cpp_230_0 = load int64 %MaterializationHelper_cpp_229_
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 120
  %sql_cpp_125_ = atomicrmwxchg int8 i8 1, %CompilationContext_cpp_215_
  %CodeGen_cpp_441_ = cmpule i8 1, %sql_cpp_125_
  condbr %CodeGen_cpp_441_ %then %cont

then:
  call void umbra::RuntimeFunctions::lockSpinlock(void*, unsigned char, unsigned char) (%CompilationContext_cpp_215_, i8 1, %sql_cpp_125_)
  br %cont

cont:
  call void umbra::BigIntRuntime::output(umbra::OutputTarget&, umbra::Type, long) (ptr 0x559427f55220, i64 360287970189639680, %MaterializationHelper_cpp_230_0)
  call void umbra::RuntimeFunctions::printStringResult(char const*, unsigned int) (global %29447, i32 1)
  call void umbra::BigIntRuntime::output(umbra::OutputTarget&, umbra::Type, long) (ptr 0x559427f55220, i64 360287970189639680, %MaterializationHelper_cpp_230_)
  call void umbra::RuntimeFunctions::printNlResult() ()
  %sql_cpp_135_ = atomicrmwxchg int8 i8 0, %CompilationContext_cpp_215_
  %CodeGen_cpp_450_ = cmpult i8 1, %sql_cpp_135_
  condbr %CodeGen_cpp_450_ %then1 %cont2

then1:
  call void umbra::RuntimeFunctions::unlockedSpinlock(void*) (%CompilationContext_cpp_215_)
  br %cont2

cont2:
  call void umbra::RuntimeFunctions::bumpResultValue(void*) (%state)
  %SortTranslator_cpp_523_ = getelementptr int8* %tuple, i32 1
  %SortTranslator_cpp_524_ = cmpne ptr %SortTranslator_cpp_523_, %to
  condbr %SortTranslator_cpp_524_ %loopTuples %loopDoneTuples

loopDoneTuples:
  br %stepDone

stepDone:
  return 37
}

declare void @umbra::RuntimeFunctions::lockSpinlock(void*, unsigned char, unsigned char)(int8* %29273, int8 %29287, int8 %29301)

declare void @umbra::BigIntRuntime::output(umbra::OutputTarget&, umbra::Type, long)(object umbra::OutputTarget* %29379, int64 %29393, int64 %29407)

declare void @umbra::RuntimeFunctions::printStringResult(char const*, unsigned int)(int8* %29469, int32 %29483)

declare void @umbra::RuntimeFunctions::printNlResult()()

declare void @umbra::RuntimeFunctions::unlockedSpinlock(void*)(int8* %29643)

declare void @umbra::RuntimeFunctions::bumpResultValue(void*)(int8* %29685)

define int32 @_9_planStep27(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  return 0
}

define int32 @_9_cleanup(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_215_ = getelementptr int8 %state, i64 128
  call void umbra::RelationMapped::Reader::destroy(void*) (%CompilationContext_cpp_215_)
  %CompilationContext_cpp_215_0 = getelementptr int8 %state, i64 224
  call void umbra::RelationMapped::Reader::destroy(void*) (%CompilationContext_cpp_215_0)
  %CompilationContext_cpp_215_1 = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::destroy(void*) (%CompilationContext_cpp_215_1)
  %CompilationContext_cpp_215_2 = getelementptr int8 %state, i64 368
  call void umbra::AggregationTarget::destroy(umbra::AggregationTarget*) (%CompilationContext_cpp_215_2)
  %CompilationContext_cpp_215_3 = getelementptr int8 %state, i64 24960
  call void umbra::AggregationTarget::destroy(umbra::AggregationTarget*) (%CompilationContext_cpp_215_3)
  %CompilationContext_cpp_215_4 = getelementptr int8 %state, i64 49552
  call void umbra::SortOperator::destroy(umbra::SortOperator*) (%CompilationContext_cpp_215_4)
  return 0
}

declare void @umbra::RelationMapped::Reader::destroy(void*)(int8* %30107)

declare void @umbra::ChainingHashTable::destroy(void*)(int8* %30259)

declare void @umbra::AggregationTarget::destroy(umbra::AggregationTarget*)(object umbra::AggregationTarget* %30342)
