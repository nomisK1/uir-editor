const %962[33] = "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

const %1322[72] = "\004\000\000\000\012\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\017V\000\000\022_%\000\000\000\000\000\000\000\000\000\000\000\000\000m_%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

const %1432[12] = "\000\000\000\000\004\000\000\000\005\000\000\000"

const %5668[0] = ""

const %5707[12] = "\000\000\000\000\013\000\000\000\014\000\000\000"

const %17969[1] = " "

define int32 @_10_init(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 128
  call void umbra::RelationMapped::Reader::init(void*) (%CompilationContext_cpp_217_)
  %CompilationContext_cpp_217_0 = getelementptr int8 %state, i64 224
  call void umbra::RelationMapped::Reader::init(void*) (%CompilationContext_cpp_217_0)
  %CompilationContext_cpp_217_1 = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::init(void*, unsigned int) (%CompilationContext_cpp_217_1, i32 0)
  %CompilationContext_cpp_217_2 = getelementptr int8 %state, i64 368
  call void umbra::AggregationTarget::init(umbra::AggregationTarget*, unsigned long) (%CompilationContext_cpp_217_2, i64 24)
  %CompilationContext_cpp_217_4 = getelementptr int8 %state, i64 24960
  call void umbra::SortOperator::init(umbra::SortOperator*, void const*, void const*) (%CompilationContext_cpp_217_4, %state, global %962)
  return 1
}

define int32 @_10_compare(int8* %trampoline, int8* %left, int8* %right) [
] {
body:
  %MaterializationHelper_cpp_230_ = load data128 %left
  %MaterializationHelper_cpp_230_0 = load data128 %right
  %Char_cpp_137_ = call i32 umbra::CharRuntime::compare(umbra::data128_t, umbra::data128_t) (%MaterializationHelper_cpp_230_, %MaterializationHelper_cpp_230_0)
  return %Char_cpp_137_
}

declare int32 @umbra::CharRuntime::compare(umbra::data128_t, umbra::data128_t)(data128 %364, data128 %378)

declare void @umbra::RelationMapped::Reader::init(void*)(int8* %512)

declare void @umbra::ChainingHashTable::init(void*, unsigned int)(int8* %722, int32 %736)

declare void @umbra::AggregationTarget::init(umbra::AggregationTarget*, unsigned long)(object umbra::AggregationTarget* %861, int64 %875)

declare void @umbra::SortOperator::init(umbra::SortOperator*, void const*, void const*)(object umbra::SortOperator* %1100, int8* %1114, int8* %1128)

define int32 @_10_planStep(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 128
  call void umbra::TableScanOperator::Job::init(void*, void*, unsigned long, umbra::Relation::RestrictionInfo*, unsigned long, unsigned int*, unsigned int) (%CompilationContext_cpp_223_, %CompilationContext_cpp_217_, i64 4, global %1322, i64 1, global %1432, i32 3)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 112, i32 2, i32 3, i32 4)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 5)
  return 6
}

declare void @umbra::TableScanOperator::Job::init(void*, void*, unsigned long, umbra::Relation::RestrictionInfo*, unsigned long, unsigned int*, unsigned int)(int8* %1563, int8* %1577, int64 %1591, object umbra::Relation::RestrictionInfo* %1605, int64 %1619, int32* %1633, int32 %1647)

declare void @umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int)(int8* %1733, int32 %1747, int32 %1761, int32 %1775, int32 %1789)

define int32 @_10_planStep0(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  call void umbra::ChainingHashTable::Collector::init(void*) (%Pipeline_cpp_277_)
  return 0
}

declare void @umbra::ChainingHashTable::Collector::init(void*)(int8* %1971)

define int32 @_10_planStep1(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  call void umbra::ChainingHashTable::Collector::destroy(void*) (%Pipeline_cpp_277_)
  return 0
}

declare void @umbra::ChainingHashTable::Collector::destroy(void*)(int8* %2123)

define int32 @_10_planStep2(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

declare void @umbra::ExecutionPlan::setupParallelStep(void*, unsigned int)(int8* %2255, int32 %2269)

define int32 @_10_join_tablescan_orders(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 0
  %to = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 1
  %reader = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 2
  %data = load object umbra::RelationMapped::Reader %reader, i32 0, i32 1
  %strings = load object umbra::RelationMapped::Reader %reader, i32 0, i32 2
  %RelationMappedLogic_cpp_473_ = ptrtoint i64 %strings
  %RelationMappedLogic_cpp_475_ = cmpult i64 %from, %to
  condbr %RelationMappedLogic_cpp_475_ %loopBlocks %loopDoneBlocks

loopBlocks:
  %firstTid = phi i64 [%from, %body %RelationMappedLogic_cpp_480_1, %loopDoneTuples]
  %RelationMappedLogic_cpp_478_ = lshr i64 %firstTid, 16
  %RelationMappedLogic_cpp_479_ = shl i64 %RelationMappedLogic_cpp_478_, 16
  %RelationMappedLogic_cpp_479_0 = add i64 %RelationMappedLogic_cpp_479_, 65536
  %RelationMappedLogic_cpp_480_ = cmpult i64 %to, %RelationMappedLogic_cpp_479_0
  %RelationMappedLogic_cpp_480_1 = select i64 %RelationMappedLogic_cpp_480_, %to, %RelationMappedLogic_cpp_479_0
  %RelationMappedLogic_cpp_482_ = mul i64 %RelationMappedLogic_cpp_478_, 76
  %RelationMappedLogic_cpp_482_2 = mul i64 %RelationMappedLogic_cpp_482_, 65536
  %RelationMappedLogic_cpp_482_3 = getelementptr int8 %data, %RelationMappedLogic_cpp_482_2
  %RelationMappedLogic_cpp_483_ = shl i64 %RelationMappedLogic_cpp_478_, 16
  %RelationMappedLogic_cpp_484_ = sub i64 %firstTid, %RelationMappedLogic_cpp_483_
  %RelationMappedLogic_cpp_484_4 = sub i64 %RelationMappedLogic_cpp_480_1, %RelationMappedLogic_cpp_483_
  %RelationMappedLogic_cpp_486_ = cmpne i64 %RelationMappedLogic_cpp_484_, %RelationMappedLogic_cpp_484_4
  condbr %RelationMappedLogic_cpp_486_ %loopTuples %loopDoneTuples

loopTuples:
  %localTid = phi i64 [%RelationMappedLogic_cpp_484_, %loopBlocks %RelationMappedLogic_cpp_493_, %contScan]
  %RelationMappedLogic_cpp_342_ = getelementptr int8 %RelationMappedLogic_cpp_482_3, i64 1310720
  %RelationMappedLogic_cpp_349_ = load int32 %RelationMappedLogic_cpp_342_, %localTid
  %Date_cpp_57_ = cmpule i32 %RelationMappedLogic_cpp_349_, 2449261
  %Date_cpp_57_5 = cmpule i32 2449170, %RelationMappedLogic_cpp_349_
  %TableScanTranslator_cpp_417_ = and bool %Date_cpp_57_5, %Date_cpp_57_
  condbr %TableScanTranslator_cpp_417_ %then %contScan

then:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  %RelationMappedLogic_cpp_347_ = load int32 %RelationMappedLogic_cpp_482_3, %localTid
  %RelationMappedLogic_cpp_342_6 = getelementptr int8 %RelationMappedLogic_cpp_482_3, i64 1572864
  %RelationMappedLogic_cpp_358_ = getelementptr data128 %RelationMappedLogic_cpp_342_6, %localTid
  %RelationMappedLogic_cpp_359_ = load int64 %RelationMappedLogic_cpp_358_
  %RelationMappedLogic_cpp_359_7 = load int64 %RelationMappedLogic_cpp_358_, i32 1
  %RelationMappedLogic_cpp_360_ = trunc i32 %RelationMappedLogic_cpp_359_
  %RelationMappedLogic_cpp_361_ = cmpult i32 12, %RelationMappedLogic_cpp_360_
  %RelationMappedLogic_cpp_361_8 = add i64 %RelationMappedLogic_cpp_359_7, %RelationMappedLogic_cpp_473_
  %RelationMappedLogic_cpp_361_9 = select i64 %RelationMappedLogic_cpp_361_, %RelationMappedLogic_cpp_361_8, %RelationMappedLogic_cpp_359_7
  %RelationMappedLogic_cpp_363_ = builddata128 d128 %RelationMappedLogic_cpp_359_ %RelationMappedLogic_cpp_361_9
  %Hash_cpp_264_ = zext i64 %RelationMappedLogic_cpp_347_
  %Hash_cpp_374_ = crc32 i64 5961697176435608501, %Hash_cpp_264_
  %Hash_cpp_375_ = crc32 i64 2231409791114444147, %Hash_cpp_264_
  %Hash_cpp_379_ = rotr i64 %Hash_cpp_375_, 32
  %Hash_cpp_379_10 = xor i64 %Hash_cpp_374_, %Hash_cpp_379_
  %Hash_cpp_379_11 = mul i64 %Hash_cpp_379_10, 2685821657736338717
  %ChainingHashTableLogic_cpp_78_ = call ptr umbra::ChainingHashTable::Collector::collect(unsigned long, unsigned long) (%Pipeline_cpp_277_, %Hash_cpp_379_11, i64 21)
  store int32 %RelationMappedLogic_cpp_347_, %ChainingHashTableLogic_cpp_78_
  %MaterializationHelper_cpp_161_ = getelementptr int8 %ChainingHashTableLogic_cpp_78_, i64 4
  call void umbra::TextRuntime::storeOwning(umbra::data128_t*, umbra::data128_t) (%MaterializationHelper_cpp_161_, %RelationMappedLogic_cpp_363_)
  %MaterializationHelper_cpp_161_12 = getelementptr int8 %MaterializationHelper_cpp_161_, i64 16
  store int8 i8 0, %MaterializationHelper_cpp_161_12
  br %contScan

contScan:
  %RelationMappedLogic_cpp_493_ = add i64 %localTid, 1
  %RelationMappedLogic_cpp_494_ = cmpne i64 %RelationMappedLogic_cpp_493_, %RelationMappedLogic_cpp_484_4
  condbr %RelationMappedLogic_cpp_494_ %loopTuples %loopDoneTuples

loopDoneTuples:
  %RelationMappedLogic_cpp_496_ = cmpne i64 %RelationMappedLogic_cpp_480_1, %to
  condbr %RelationMappedLogic_cpp_496_ %loopBlocks %loopDoneBlocks

loopDoneBlocks:
  br %stepDone

stepDone:
  return 5
}

declare int8* @umbra::ChainingHashTable::Collector::collect(unsigned long, unsigned long)(object umbra::ChainingHashTable::Collector* %4383, int64 %4397, int64 %4411)

declare void @umbra::TextRuntime::storeOwning(umbra::data128_t*, umbra::data128_t)(data128* %4557, data128 %4571)

define int32 @_10_planStep3(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  call void umbra::TableScanOperator::Job::destroy(void*) (%CompilationContext_cpp_223_)
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::prepareForInsertEntries(void*, unsigned int) (%CompilationContext_cpp_217_, %state, i32 32)
  call void umbra::ExecutionPlan::preparePerObjectWork(void*, unsigned int) (%state, i32 32)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 8)
  return 7
}

declare void @umbra::TableScanOperator::Job::destroy(void*)(int8* %5006)

declare void @umbra::ChainingHashTable::prepareForInsertEntries(void*, unsigned int)(object umbra::ChainingHashTable* %5088, int8* %5102, int32 %5116)

declare void @umbra::ExecutionPlan::preparePerObjectWork(void*, unsigned int)(int8* %5156, int32 %5170)

define int32 @_10_join_tablescan_orders_extra(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_471_ = load int8* %localState
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::insertEntries(umbra::ChainingHashTable::Collector&) (%CompilationContext_cpp_217_, %Pipeline_cpp_471_)
  br %stepDone

stepDone:
  return 8
}

declare void @umbra::ChainingHashTable::insertEntries(umbra::ChainingHashTable::Collector&)(object umbra::ChainingHashTable* %5414, object umbra::ChainingHashTable::Collector* %5428)

define int32 @_10_planStep4(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::finishPerObjectWork(void*) (%state)
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 224
  call void umbra::TableScanOperator::Job::init(void*, void*, unsigned long, umbra::Relation::RestrictionInfo*, unsigned long, unsigned int*, unsigned int) (%CompilationContext_cpp_223_, %CompilationContext_cpp_217_, i64 5, global %5668, i64 0, global %5707, i32 3)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 28736, i32 9, i32 10, i32 11)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 12)
  return 13
}

declare void @umbra::ExecutionPlan::finishPerObjectWork(void*)(int8* %5554)

declare void @umbra::ExecutionPlan::cleanupParallelWork(void*)(int8* %5586)

define int32 @_10_planStep5(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  call void umbra::Preaggregation::init(umbra::Preaggregation*, unsigned long) (%Pipeline_cpp_277_, i64 24)
  return 0
}

declare void @umbra::Preaggregation::init(umbra::Preaggregation*, unsigned long)(object umbra::Preaggregation* %6041, int64 %6055)

define int32 @_10_planStep6(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  call void umbra::Preaggregation::destroy(umbra::Preaggregation*) (%Pipeline_cpp_277_)
  return 0
}

declare void @umbra::Preaggregation::destroy(umbra::Preaggregation*)(object umbra::Preaggregation* %6211)

define int32 @_10_planStep7(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_10_groupby_join_tablescan_lineitem(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 0
  %to = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 1
  %reader = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 2
  %data = load object umbra::RelationMapped::Reader %reader, i32 0, i32 1
  %RelationMappedLogic_cpp_475_ = cmpult i64 %from, %to
  condbr %RelationMappedLogic_cpp_475_ %loopBlocks %loopDoneBlocks

loopBlocks:
  %firstTid = phi i64 [%from, %body %RelationMappedLogic_cpp_480_1, %loopDoneTuples]
  %RelationMappedLogic_cpp_478_ = lshr i64 %firstTid, 16
  %RelationMappedLogic_cpp_479_ = shl i64 %RelationMappedLogic_cpp_478_, 16
  %RelationMappedLogic_cpp_479_0 = add i64 %RelationMappedLogic_cpp_479_, 65536
  %RelationMappedLogic_cpp_480_ = cmpult i64 %to, %RelationMappedLogic_cpp_479_0
  %RelationMappedLogic_cpp_480_1 = select i64 %RelationMappedLogic_cpp_480_, %to, %RelationMappedLogic_cpp_479_0
  %RelationMappedLogic_cpp_482_ = mul i64 %RelationMappedLogic_cpp_478_, 116
  %RelationMappedLogic_cpp_482_2 = mul i64 %RelationMappedLogic_cpp_482_, 65536
  %RelationMappedLogic_cpp_482_3 = getelementptr int8 %data, %RelationMappedLogic_cpp_482_2
  %RelationMappedLogic_cpp_483_ = shl i64 %RelationMappedLogic_cpp_478_, 16
  %RelationMappedLogic_cpp_484_ = sub i64 %firstTid, %RelationMappedLogic_cpp_483_
  %RelationMappedLogic_cpp_484_4 = sub i64 %RelationMappedLogic_cpp_480_1, %RelationMappedLogic_cpp_483_
  %RelationMappedLogic_cpp_486_ = cmpne i64 %RelationMappedLogic_cpp_484_, %RelationMappedLogic_cpp_484_4
  condbr %RelationMappedLogic_cpp_486_ %loopTuples %loopDoneTuples

loopTuples:
  %localTid = phi i64 [%RelationMappedLogic_cpp_484_, %loopBlocks %RelationMappedLogic_cpp_493_, %contScan]
  %RelationMappedLogic_cpp_342_ = getelementptr int8 %RelationMappedLogic_cpp_482_3, i64 3932160
  %RelationMappedLogic_cpp_349_ = load int32 %RelationMappedLogic_cpp_342_, %localTid
  %RelationMappedLogic_cpp_342_5 = getelementptr int8 %RelationMappedLogic_cpp_482_3, i64 4194304
  %RelationMappedLogic_cpp_349_6 = load int32 %RelationMappedLogic_cpp_342_5, %localTid
  %Date_cpp_54_ = cmpult i32 %RelationMappedLogic_cpp_349_, %RelationMappedLogic_cpp_349_6
  condbr %Date_cpp_54_ %then %contScan

then:
  %RelationMappedLogic_cpp_347_ = load int32 %RelationMappedLogic_cpp_482_3, %localTid
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 320
  %Hash_cpp_264_ = zext i64 %RelationMappedLogic_cpp_347_
  %Hash_cpp_374_ = crc32 i64 5961697176435608501, %Hash_cpp_264_
  %Hash_cpp_375_ = crc32 i64 2231409791114444147, %Hash_cpp_264_
  %Hash_cpp_379_ = rotr i64 %Hash_cpp_375_, 32
  %Hash_cpp_379_7 = xor i64 %Hash_cpp_374_, %Hash_cpp_379_
  %Hash_cpp_379_8 = mul i64 %Hash_cpp_379_7, 2685821657736338717
  %ChainingHashTableLogic_cpp_108_ = call ptr umbra::ChainingHashTable::lookup(unsigned long) (%CompilationContext_cpp_217_, %Hash_cpp_379_8)
  %ChainingHashTableLogic_cpp_110_ = isnotnull ptr %ChainingHashTableLogic_cpp_108_
  condbr %ChainingHashTableLogic_cpp_110_ %looploopHashChain %loopDoneloopHashChain

looploopHashChain:
  %hashEntry = phi ptr [%ChainingHashTableLogic_cpp_108_, %then %ChainingHashTableLogic_cpp_136_, %continueProbe]
  %ChainingHashTableLogic_cpp_115_ = getelementptr int8 %hashEntry, i64 16
  %MaterializationHelper_cpp_230_ = load int32 %ChainingHashTableLogic_cpp_115_
  %MaterializationHelper_cpp_233_ = getelementptr int8 %ChainingHashTableLogic_cpp_115_, i64 4
  %MaterializationHelper_cpp_230_9 = load data128 %MaterializationHelper_cpp_233_
  %MaterializationHelper_cpp_233_10 = getelementptr int8 %MaterializationHelper_cpp_233_, i64 16
  %Integer_cpp_82_ = cmpeq i32 %RelationMappedLogic_cpp_347_, %MaterializationHelper_cpp_230_
  condbr %Integer_cpp_82_ %else %continueProbe

else:
  %HashJoinTranslator_cpp_754_ = load int8 %MaterializationHelper_cpp_233_10
  %HashJoinTranslator_cpp_754_11 = cmpeq i8 %HashJoinTranslator_cpp_754_, 0
  condbr %HashJoinTranslator_cpp_754_11 %then12 %cont29

then12:
  %HashJoinTranslator_cpp_756_ = atomicrmwxchg int8 i8 2, %MaterializationHelper_cpp_233_10
  %HashJoinTranslator_cpp_756_13 = cmpeq i8 %HashJoinTranslator_cpp_756_, 0
  condbr %HashJoinTranslator_cpp_756_13 %then14 %cont28

then14:
  %Hash_cpp_382_ = call i64 umbra::TextRuntime::hashCRC(umbra::data128_t, unsigned long) (%MaterializationHelper_cpp_230_9, i64 3749646514382295044)
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  %hashTable = getelementptr object umbra::Preaggregation %Pipeline_cpp_277_, i32 0, i32 0, i32 0
  %PreaggregationLogic_cpp_20_ = and i64 %Hash_cpp_382_, 1023
  %PreaggregationLogic_cpp_20_15 = load object umbra::Preaggregation::EntryHeader* %hashTable, %PreaggregationLogic_cpp_20_
  %hash = load object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_20_15, i32 0, i32 0
  %PreaggregationLogic_cpp_25_ = cmpne i64 %hash, %Hash_cpp_382_
  condbr %PreaggregationLogic_cpp_25_ %then16 %else17

then16:
  %PreaggregationLogic_cpp_29_ = call ptr umbra::Preaggregation::addEntry(unsigned long) (%Pipeline_cpp_277_, %Hash_cpp_382_)
  call void umbra::TextRuntime::storeOwningPersistent(umbra::data128_t*, umbra::data128_t) (%PreaggregationLogic_cpp_29_, %MaterializationHelper_cpp_230_9)
  %GroupByTranslator_cpp_381_ = getelementptr int8 %PreaggregationLogic_cpp_29_, i64 16
  store int64 i64 1, %GroupByTranslator_cpp_381_
  br %cont27

else17:
  %PreaggregationLogic_cpp_36_ = getelementptr object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_20_15, i32 1
  %MaterializationHelper_cpp_876_ = load data128 %PreaggregationLogic_cpp_36_
  %Char_cpp_114_ = extractdata128 i64 %MaterializationHelper_cpp_230_9
  %Char_cpp_114_18 = extractdata128 i64 %MaterializationHelper_cpp_876_
  %Char_cpp_115_ = cmpeq i64 %Char_cpp_114_, %Char_cpp_114_18
  condbr %Char_cpp_115_ %then19 %cont24

then19:
  %Char_cpp_116_ = extractdata128 i64 %MaterializationHelper_cpp_876_
  %Char_cpp_116_20 = extractdata128 i64 %MaterializationHelper_cpp_230_9
  %Char_cpp_116_21 = cmpeq i64 %Char_cpp_116_20, %Char_cpp_116_
  condbr %Char_cpp_116_21 %then22 %else23

then22:
  br %cont

else23:
  %Char_cpp_119_ = call bool umbra::TextRuntime::compareEqNonOwning(umbra::data128_t, umbra::data128_t) (%MaterializationHelper_cpp_230_9, %MaterializationHelper_cpp_876_)
  br %cont

cont:
  %Char_cpp_120_ = phi bool [bool true, %then22 %Char_cpp_119_, %else23]
  br %cont24

cont24:
  %Char_cpp_121_ = phi bool [%Char_cpp_120_, %cont bool false, %else17]
  condbr %Char_cpp_121_ %else26 %then16

else26:
  %GroupByTranslator_cpp_391_ = getelementptr int8 %PreaggregationLogic_cpp_36_, i64 16
  %MaterializationHelper_cpp_977_ = load int64 %GroupByTranslator_cpp_391_
  %Aggregate_cpp_173_ = add i64 %MaterializationHelper_cpp_977_, 1
  store int64 %Aggregate_cpp_173_, %GroupByTranslator_cpp_391_
  br %cont27

cont27:
  br %cont28

cont28:
  br %cont29

cont29:
  br %loopDoneloopHashChain

continueProbe:
  %ChainingHashTableLogic_cpp_136_ = call ptr umbra::ChainingHashTable::lookupNext(void*) (%CompilationContext_cpp_217_, %hashEntry)
  %ChainingHashTableLogic_cpp_137_ = isnotnull ptr %ChainingHashTableLogic_cpp_136_
  condbr %ChainingHashTableLogic_cpp_137_ %looploopHashChain %loopDoneloopHashChain

loopDoneloopHashChain:
  br %contScan

contScan:
  %RelationMappedLogic_cpp_493_ = add i64 %localTid, 1
  %RelationMappedLogic_cpp_494_ = cmpne i64 %RelationMappedLogic_cpp_493_, %RelationMappedLogic_cpp_484_4
  condbr %RelationMappedLogic_cpp_494_ %loopTuples %loopDoneTuples

loopDoneTuples:
  %RelationMappedLogic_cpp_496_ = cmpne i64 %RelationMappedLogic_cpp_480_1, %to
  condbr %RelationMappedLogic_cpp_496_ %loopBlocks %loopDoneBlocks

loopDoneBlocks:
  br %stepDone

stepDone:
  return 12
}

declare int8* @umbra::ChainingHashTable::lookup(unsigned long)(object umbra::ChainingHashTable* %7927, int64 %7941)

declare int64 @umbra::TextRuntime::hashCRC(umbra::data128_t, unsigned long)(data128 %8718, int64 %8732)

declare int8* @umbra::Preaggregation::addEntry(unsigned long)(object umbra::Preaggregation* %9061, int64 %9075)

declare void @umbra::TextRuntime::storeOwningPersistent(umbra::data128_t*, umbra::data128_t)(data128* %9139, data128 %9153)

declare bool @umbra::TextRuntime::compareEqNonOwning(umbra::data128_t, umbra::data128_t)(data128 %9584, data128 %9598)

declare int8* @umbra::ChainingHashTable::lookupNext(void*)(object umbra::ChainingHashTable* %10003, int8* %10017)

define int32 @_10_planStep8(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  call void umbra::TableScanOperator::Job::destroy(void*) (%CompilationContext_cpp_223_)
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 368
  call void umbra::AggregationTarget::exchangeTables(void*, unsigned long) (%CompilationContext_cpp_217_, %state, i64 32)
  %CompilationContext_cpp_223_0 = getelementptr int8 %state, i64 56
  call void umbra::AggregationTarget::setupAggregateJob(void*) (%CompilationContext_cpp_217_, %CompilationContext_cpp_223_0)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 15)
  return 14
}

declare void @umbra::AggregationTarget::exchangeTables(void*, unsigned long)(object umbra::AggregationTarget* %10528, int8* %10542, int64 %10556)

declare void @umbra::AggregationTarget::setupAggregateJob(void*)(object umbra::AggregationTarget* %10647, int8* %10661)

define int32 @_10_groupby_join_tablescan_lineitem_extra(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %PreaggregationLogic_cpp_47_ = load object umbra::AggregationTarget::Fragment* %localState
  %chunks = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 3
  %PreaggregationLogic_cpp_50_ = isnotnull ptr %chunks
  condbr %PreaggregationLogic_cpp_50_ %loopChunk %loopDoneChunk

loopChunk:
  %chunk = phi ptr [%chunks, %body %next12, %loopDoneChunkEntries]
  call void umbra::AggregationTarget::Fragment::checkSize() (%PreaggregationLogic_cpp_47_)
  %hashTable = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 0
  %hashTableShift = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 1
  %PreaggregationLogic_cpp_60_ = getelementptr object umbra::Preaggregation::EntryChunk %chunk, i32 1
  %limit = load object umbra::Preaggregation::EntryChunk %chunk, i32 0, i32 1
  %PreaggregationLogic_cpp_62_ = cmpne ptr %PreaggregationLogic_cpp_60_, %limit
  condbr %PreaggregationLogic_cpp_62_ %loopChunkEntries %loopDoneChunkEntries

loopChunkEntries:
  %entry = phi ptr [%PreaggregationLogic_cpp_60_, %loopChunk %PreaggregationLogic_cpp_110_, %continue]
  %hash = load object umbra::Preaggregation::EntryHeader %entry, i32 0, i32 0
  %PreaggregationLogic_cpp_67_ = lshr i64 %hash, %hashTableShift
  %PreaggregationLogic_cpp_67_0 = getelementptr object umbra::Preaggregation::EntryHeader* %hashTable, %PreaggregationLogic_cpp_67_
  %PreaggregationLogic_cpp_69_ = load object umbra::Preaggregation::EntryHeader* %PreaggregationLogic_cpp_67_0
  %PreaggregationLogic_cpp_71_ = isnotnull ptr %PreaggregationLogic_cpp_69_
  condbr %PreaggregationLogic_cpp_71_ %loopChain %loopDoneChain

loopChain:
  %chainEntry = phi ptr [%PreaggregationLogic_cpp_69_, %loopChunkEntries %next, %noMatch]
  %hash1 = load object umbra::Preaggregation::EntryHeader %chainEntry, i32 0, i32 0
  %PreaggregationLogic_cpp_75_ = cmpeq i64 %hash, %hash1
  condbr %PreaggregationLogic_cpp_75_ %then %noMatch

then:
  %GroupByTranslator_cpp_178_ = getelementptr object umbra::Preaggregation::EntryHeader %entry, i32 1
  %MaterializationHelper_cpp_876_ = load data128 %GroupByTranslator_cpp_178_
  %GroupByTranslator_cpp_179_ = getelementptr object umbra::Preaggregation::EntryHeader %chainEntry, i32 1
  %MaterializationHelper_cpp_876_2 = load data128 %GroupByTranslator_cpp_179_
  %Char_cpp_114_ = extractdata128 i64 %MaterializationHelper_cpp_876_
  %Char_cpp_114_3 = extractdata128 i64 %MaterializationHelper_cpp_876_2
  %Char_cpp_115_ = cmpeq i64 %Char_cpp_114_, %Char_cpp_114_3
  condbr %Char_cpp_115_ %then4 %cont8

then4:
  %Char_cpp_116_ = extractdata128 i64 %MaterializationHelper_cpp_876_2
  %Char_cpp_116_5 = extractdata128 i64 %MaterializationHelper_cpp_876_
  %Char_cpp_116_6 = cmpeq i64 %Char_cpp_116_5, %Char_cpp_116_
  condbr %Char_cpp_116_6 %then7 %else

then7:
  br %cont

else:
  %Char_cpp_119_ = call bool umbra::TextRuntime::compareEqNonOwning(umbra::data128_t, umbra::data128_t) (%MaterializationHelper_cpp_876_, %MaterializationHelper_cpp_876_2)
  br %cont

cont:
  %Char_cpp_120_ = phi bool [bool true, %then7 %Char_cpp_119_, %else]
  br %cont8

cont8:
  %Char_cpp_121_ = phi bool [%Char_cpp_120_, %cont bool false, %then]
  condbr %Char_cpp_121_ %else9 %noMatch

else9:
  %GroupByTranslator_cpp_188_ = getelementptr int8 %entry, i64 32
  %GroupByTranslator_cpp_188_10 = getelementptr int8 %chainEntry, i64 32
  %MaterializationHelper_cpp_977_ = load int64 %GroupByTranslator_cpp_188_10
  %MaterializationHelper_cpp_977_11 = load int64 %GroupByTranslator_cpp_188_
  %Aggregate_cpp_182_ = add i64 %MaterializationHelper_cpp_977_, %MaterializationHelper_cpp_977_11
  store int64 %Aggregate_cpp_182_, %GroupByTranslator_cpp_188_10
  br %continue

noMatch:
  %next = load object umbra::Preaggregation::EntryHeader %chainEntry, i32 0, i32 1
  %PreaggregationLogic_cpp_83_ = isnotnull ptr %next
  condbr %PreaggregationLogic_cpp_83_ %loopChain %loopDoneChain

loopDoneChain:
  store object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_69_, %entry, i32 0, i32 1
  store object umbra::Preaggregation::EntryHeader* %entry, %PreaggregationLogic_cpp_67_0
  %count = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 2
  %PreaggregationLogic_cpp_90_ = add i64 %count, 1
  store object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_90_, %PreaggregationLogic_cpp_47_, i32 0, i32 2
  br %continue

continue:
  %PreaggregationLogic_cpp_110_ = getelementptr int8 %entry, i64 40
  %PreaggregationLogic_cpp_111_ = cmpne ptr %PreaggregationLogic_cpp_110_, %limit
  condbr %PreaggregationLogic_cpp_111_ %loopChunkEntries %loopDoneChunkEntries

loopDoneChunkEntries:
  %next12 = load object umbra::Preaggregation::EntryChunk %chunk, i32 0, i32 0
  %PreaggregationLogic_cpp_116_ = isnotnull ptr %next12
  condbr %PreaggregationLogic_cpp_116_ %loopChunk %loopDoneChunk

loopDoneChunk:
  store object umbra::AggregationTarget::Fragment ptr 0, %PreaggregationLogic_cpp_47_, i32 0, i32 3
  br %stepDone

stepDone:
  return 15
}

declare void @umbra::AggregationTarget::Fragment::checkSize()(object umbra::AggregationTarget::Fragment* %10986)

define int32 @_10_planStep9(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 368
  call void umbra::AggregationTarget::setupScanJob(void*) (%CompilationContext_cpp_217_, %CompilationContext_cpp_223_)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 232, i32 16, i32 17, i32 18)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 19)
  return 20
}

declare void @umbra::AggregationTarget::setupScanJob(void*)(object umbra::AggregationTarget* %13201, int8* %13215)

define int32 @_10_planStep10(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  call void umbra::SortOperator::init(umbra::SortOperator*, void const*, void const*) (%Pipeline_cpp_277_, %state, global %962)
  return 0
}

define int32 @_10_planStep11(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  call void umbra::SortOperator::destroy(umbra::SortOperator*) (%Pipeline_cpp_277_)
  return 0
}

declare void @umbra::SortOperator::destroy(umbra::SortOperator*)(object umbra::SortOperator* %13571)

define int32 @_10_planStep12(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_10_sort_groupby(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::AggregationTarget::ScanMorsel %localState, i32 0, i32 0
  %to = load object umbra::AggregationTarget::ScanMorsel %localState, i32 0, i32 1
  %PreaggregationLogic_cpp_130_ = cmpne ptr %from, %to
  condbr %PreaggregationLogic_cpp_130_ %loopSlots %loopDoneSlots

loopSlots:
  %slot = phi ptr [%from, %body %PreaggregationLogic_cpp_146_, %loopDoneChain]
  %PreaggregationLogic_cpp_135_ = load object umbra::Preaggregation::EntryHeader* %slot
  %PreaggregationLogic_cpp_136_ = isnotnull ptr %PreaggregationLogic_cpp_135_
  condbr %PreaggregationLogic_cpp_136_ %loopChain %loopDoneChain

loopChain:
  %iter = phi ptr [%PreaggregationLogic_cpp_135_, %loopSlots %next, %loopChain]
  %PreaggregationLogic_cpp_140_ = getelementptr int8 %iter, i64 16
  %MaterializationHelper_cpp_876_ = load data128 %PreaggregationLogic_cpp_140_
  %GroupByTranslator_cpp_424_ = getelementptr int8 %PreaggregationLogic_cpp_140_, i64 16
  %MaterializationHelper_cpp_876_0 = load int64 %GroupByTranslator_cpp_424_
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  %SortTranslator_cpp_494_ = call ptr umbra::SortOperator::storeTuple(unsigned long) (%Pipeline_cpp_277_, i64 24)
  call void umbra::TextRuntime::storeOwningPersistent(umbra::data128_t*, umbra::data128_t) (%SortTranslator_cpp_494_, %MaterializationHelper_cpp_876_)
  %MaterializationHelper_cpp_161_ = getelementptr int8 %SortTranslator_cpp_494_, i64 16
  store int64 %MaterializationHelper_cpp_876_0, %MaterializationHelper_cpp_161_
  %next = load object umbra::Preaggregation::EntryHeader %iter, i32 0, i32 1
  %PreaggregationLogic_cpp_143_ = isnotnull ptr %next
  condbr %PreaggregationLogic_cpp_143_ %loopChain %loopDoneChain

loopDoneChain:
  %PreaggregationLogic_cpp_146_ = getelementptr object umbra::Preaggregation::EntryHeader* %slot, i32 1
  %PreaggregationLogic_cpp_147_ = cmpne ptr %PreaggregationLogic_cpp_146_, %to
  condbr %PreaggregationLogic_cpp_147_ %loopSlots %loopDoneSlots

loopDoneSlots:
  br %stepDone

stepDone:
  return 19
}

declare int8* @umbra::SortOperator::storeTuple(unsigned long)(object umbra::SortOperator* %14386, int64 %14400)

define int32 @_10_planStep13(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::preparePerObjectWork(void*, unsigned int) (%state, i32 32)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 22)
  return 21
}

define int32 @_10_sort_groupby_extra(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_471_ = load int8* %localState
  call void umbra::SortOperator::sortLocal() (%Pipeline_cpp_471_)
  br %stepDone

stepDone:
  return 22
}

declare void @umbra::SortOperator::sortLocal()(object umbra::SortOperator* %15131)

define int32 @_10_planStep14(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::finishPerObjectWork(void*) (%state)
  %currentLocalState = load object umbra::GlobalStateHeader %state, i32 0, i32 2
  %threadCount = load object umbra::LocalStateHeader %currentLocalState, i32 0, i32 2
  %localStateSize = load object umbra::LocalStateHeader %currentLocalState, i32 0, i32 0
  %Pipeline_cpp_69_ = getelementptr int8 %currentLocalState, i64 64
  %Pipeline_cpp_56_ = cmpult i32 0, %threadCount
  condbr %Pipeline_cpp_56_ %loopStates %loopDoneStates

loopStates:
  %Thread = phi i32 [i32 0, %body %Pipeline_cpp_97_, %continue]
  %Pipeline_cpp_76_ = zext i64 %Thread
  %Pipeline_cpp_76_0 = mul i64 %Pipeline_cpp_76_, %localStateSize
  %Pipeline_cpp_76_1 = getelementptr int8 %Pipeline_cpp_69_, %Pipeline_cpp_76_0
  %Pipeline_cpp_79_ = load int8 %Pipeline_cpp_76_1, i32 -1
  %Pipeline_cpp_79_2 = cmpeq i8 %Pipeline_cpp_79_, 0
  condbr %Pipeline_cpp_79_2 %continue %else

else:
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 24960
  %Pipeline_cpp_277_ = getelementptr int8 %Pipeline_cpp_76_1, i64 32
  call void umbra::SortOperator::donateTupleMemory(umbra::SortOperator&) (%Pipeline_cpp_277_, %CompilationContext_cpp_217_)
  br %continue

continue:
  %Pipeline_cpp_97_ = add i32 %Thread, 1
  %Pipeline_cpp_98_ = cmpult i32 %Pipeline_cpp_97_, %threadCount
  condbr %Pipeline_cpp_98_ %loopStates %loopDoneStates

loopDoneStates:
  %CompilationContext_cpp_217_3 = getelementptr int8 %state, i64 24960
  call void umbra::SortOperator::prepareSortGlobal() (%CompilationContext_cpp_217_3)
  %CompilationContext_cpp_217_4 = getelementptr int8 %state, i64 24960
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  call void umbra::SortOperator::setupGlobalSortJob(void*, umbra::SortOperator&) (%CompilationContext_cpp_223_, %CompilationContext_cpp_217_4)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 24)
  return 23
}

declare void @umbra::SortOperator::donateTupleMemory(umbra::SortOperator&)(object umbra::SortOperator* %15817, object umbra::SortOperator* %15831)

declare void @umbra::SortOperator::prepareSortGlobal()(object umbra::SortOperator* %16008)

declare void @umbra::SortOperator::setupGlobalSortJob(void*, umbra::SortOperator&)(int8* %16141, object umbra::SortOperator* %16155)

define int32 @_10_sort_groupby_extra15(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %SortTranslator_cpp_433_ = load int32 %localState
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 24960
  call void umbra::SortOperator::sortGlobal(unsigned int) (%CompilationContext_cpp_217_, %SortTranslator_cpp_433_)
  br %stepDone

stepDone:
  return 24
}

declare void @umbra::SortOperator::sortGlobal(unsigned int)(object umbra::SortOperator* %16405, int32 %16419)

define int32 @_10_planStep16(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 24960
  call void umbra::SortOperator::finishSortGlobal() (%CompilationContext_cpp_217_)
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_217_0 = getelementptr int8 %state, i64 24960
  call void umbra::SortOperator::Job::init(void*, umbra::SortOperator&, bool) (%CompilationContext_cpp_223_, %CompilationContext_cpp_217_0, bool true)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 32, i32 25, i32 26, i32 27)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 28)
  return 29
}

declare void @umbra::SortOperator::finishSortGlobal()(object umbra::SortOperator* %16595)

declare void @umbra::SortOperator::Job::init(void*, umbra::SortOperator&, bool)(int8* %16746, object umbra::SortOperator* %16760, bool %16774)

define int32 @_10_planStep17(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_10_planStep18(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_10_planStep19(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_10_map_sort(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::SortOperator::Morsel %localState, i32 0, i32 0
  %to = load object umbra::SortOperator::Morsel %localState, i32 0, i32 1
  %SortTranslator_cpp_513_ = cmpne ptr %from, %to
  condbr %SortTranslator_cpp_513_ %loopTuples %loopDoneTuples

loopTuples:
  %tuple = phi ptr [%from, %body %SortTranslator_cpp_525_, %cont3]
  %CodeGen_hpp_1151_ = load int8* %tuple
  %MaterializationHelper_cpp_230_ = load data128 %CodeGen_hpp_1151_
  %MaterializationHelper_cpp_233_ = getelementptr int8 %CodeGen_hpp_1151_, i64 16
  %MaterializationHelper_cpp_230_0 = load int64 %MaterializationHelper_cpp_233_
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 120
  %sql_cpp_129_ = atomicrmwxchg int8 i8 1, %CompilationContext_cpp_217_
  %CodeGen_cpp_442_ = cmpule i8 1, %sql_cpp_129_
  condbr %CodeGen_cpp_442_ %then %cont

then:
  call void umbra::RuntimeFunctions::lockSpinlock(void*, unsigned char, unsigned char) (%CompilationContext_cpp_217_, i8 1, %sql_cpp_129_)
  br %cont

cont:
  call void umbra::CharRuntime::output(umbra::OutputTarget&, umbra::Type, umbra::data128_t) (ptr 0x560f2733d700, i64 720575940630937600, %MaterializationHelper_cpp_230_)
  call void umbra::RuntimeFunctions::printStringResult(char const*, unsigned int) (global %17969, i32 1)
  call void umbra::BigIntRuntime::output(umbra::OutputTarget&, umbra::Type, long) (ptr 0x560f2733d700, i64 360287970189639680, %MaterializationHelper_cpp_230_0)
  call void umbra::RuntimeFunctions::printNlResult() ()
  %sql_cpp_139_ = atomicrmwxchg int8 i8 0, %CompilationContext_cpp_217_
  %CodeGen_cpp_451_ = cmpult i8 1, %sql_cpp_139_
  condbr %CodeGen_cpp_451_ %then2 %cont3

then2:
  call void umbra::RuntimeFunctions::unlockedSpinlock(void*) (%CompilationContext_cpp_217_)
  br %cont3

cont3:
  call void umbra::RuntimeFunctions::bumpResultValue(void*) (%state)
  %SortTranslator_cpp_525_ = getelementptr int8* %tuple, i32 1
  %SortTranslator_cpp_526_ = cmpne ptr %SortTranslator_cpp_525_, %to
  condbr %SortTranslator_cpp_526_ %loopTuples %loopDoneTuples

loopDoneTuples:
  br %stepDone

stepDone:
  return 28
}

declare void @umbra::RuntimeFunctions::lockSpinlock(void*, unsigned char, unsigned char)(int8* %17795, int8 %17809, int8 %17823)

declare void @umbra::CharRuntime::output(umbra::OutputTarget&, umbra::Type, umbra::data128_t)(object umbra::OutputTarget* %17901, int64 %17915, data128 %17929)

declare void @umbra::RuntimeFunctions::printStringResult(char const*, unsigned int)(int8* %17991, int32 %18005)

declare void @umbra::BigIntRuntime::output(umbra::OutputTarget&, umbra::Type, long)(object umbra::OutputTarget* %18055, int64 %18069, int64 %18083)

declare void @umbra::RuntimeFunctions::printNlResult()()

declare void @umbra::RuntimeFunctions::unlockedSpinlock(void*)(int8* %18221)

declare void @umbra::RuntimeFunctions::bumpResultValue(void*)(int8* %18263)

define int32 @_10_planStep20(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  return 0
}

define int32 @_10_cleanup(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 128
  call void umbra::RelationMapped::Reader::destroy(void*) (%CompilationContext_cpp_217_)
  %CompilationContext_cpp_217_0 = getelementptr int8 %state, i64 224
  call void umbra::RelationMapped::Reader::destroy(void*) (%CompilationContext_cpp_217_0)
  %CompilationContext_cpp_217_1 = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::destroy(void*) (%CompilationContext_cpp_217_1)
  %CompilationContext_cpp_217_2 = getelementptr int8 %state, i64 368
  call void umbra::AggregationTarget::destroy(umbra::AggregationTarget*) (%CompilationContext_cpp_217_2)
  %CompilationContext_cpp_217_3 = getelementptr int8 %state, i64 24960
  call void umbra::SortOperator::destroy(umbra::SortOperator*) (%CompilationContext_cpp_217_3)
  return 0
}

declare void @umbra::RelationMapped::Reader::destroy(void*)(int8* %18685)

declare void @umbra::ChainingHashTable::destroy(void*)(int8* %18837)

declare void @umbra::AggregationTarget::destroy(umbra::AggregationTarget*)(object umbra::AggregationTarget* %18920)
