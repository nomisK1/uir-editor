const %1535[144] = "\006\000\000\000\002\000\000\000\000\000\000\012\000\000\000\012\000\000\000\000\000\000\000\000\000\000\000\000\234U\000\000\007\000\000\000MED BOX\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000\000\000\000\012\000\000\000\012\000\000\000\000\000\000\000\000\000\000\000\000\234U\000\000\010\000\000\000Brand#23\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

const %1717[12] = "\000\000\000\000\003\000\000\000\006\000\000\000"

const %6681[0] = ""

const %6720[12] = "\001\000\000\000\004\000\000\000\005\000\000\000"

const %16646[72] = "\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\234U\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

const %16757[8] = "\001\000\000\000\004\000\000\000"

define int32 @_9_init(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 128
  call void umbra::RelationMapped::Reader::init(void*) (%CompilationContext_cpp_217_)
  %CompilationContext_cpp_217_0 = getelementptr int8 %state, i64 224
  call void umbra::RelationMapped::Reader::init(void*) (%CompilationContext_cpp_217_0)
  %CompilationContext_cpp_217_1 = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::init(void*, unsigned int) (%CompilationContext_cpp_217_1, i32 0)
  %CompilationContext_cpp_217_2 = getelementptr int8 %state, i64 368
  call void umbra::RelationMapped::Reader::init(void*) (%CompilationContext_cpp_217_2)
  %CompilationContext_cpp_217_3 = getelementptr int8 %state, i64 464
  call void umbra::ChainingHashTable::init(void*, unsigned int) (%CompilationContext_cpp_217_3, i32 0)
  %CompilationContext_cpp_217_4 = getelementptr int8 %state, i64 512
  call void umbra::AggregationTarget::init(umbra::AggregationTarget*, unsigned long) (%CompilationContext_cpp_217_4, i64 4)
  %CompilationContext_cpp_217_6 = getelementptr int8 %state, i64 25104
  call void umbra::ChainingHashTable::init(void*, unsigned int) (%CompilationContext_cpp_217_6, i32 0)
  %CompilationContext_cpp_217_7 = getelementptr int8 %state, i64 25152
  call void umbra::AggregationTarget::init(umbra::AggregationTarget*, unsigned long) (%CompilationContext_cpp_217_7, i64 9)
  %CompilationContext_cpp_217_8 = getelementptr int8 %state, i64 25152
  %GroupByTranslator_cpp_451_ = call ptr umbra::AggregationTarget::createExplicitGroup(unsigned long) (%CompilationContext_cpp_217_8, i64 3749646514382295044)
  %MaterializationHelper_cpp_726_ = getelementptr int8 %GroupByTranslator_cpp_451_, i64 8
  store int64 i64 0, %GroupByTranslator_cpp_451_
  store int8 i8 1, %MaterializationHelper_cpp_726_
  return 1
}

declare void @umbra::RelationMapped::Reader::init(void*)(int8* %144)

declare void @umbra::ChainingHashTable::init(void*, unsigned int)(int8* %354, int32 %368)

declare void @umbra::AggregationTarget::init(umbra::AggregationTarget*, unsigned long)(object umbra::AggregationTarget* %683, int64 %697)

declare int8* @umbra::AggregationTarget::createExplicitGroup(unsigned long)(object umbra::AggregationTarget* %1141, int64 %1155)

define int32 @_9_planStep(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 128
  call void umbra::TableScanOperator::Job::init(void*, void*, unsigned long, umbra::Relation::RestrictionInfo*, unsigned long, unsigned int*, unsigned int) (%CompilationContext_cpp_223_, %CompilationContext_cpp_217_, i64 0, global %1535, i64 2, global %1717, i32 3)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 112, i32 2, i32 3, i32 4)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 5)
  return 6
}

declare void @umbra::TableScanOperator::Job::init(void*, void*, unsigned long, umbra::Relation::RestrictionInfo*, unsigned long, unsigned int*, unsigned int)(int8* %1834, int8* %1848, int64 %1862, object umbra::Relation::RestrictionInfo* %1876, int64 %1890, int32* %1904, int32 %1918)

declare void @umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int)(int8* %2004, int32 %2018, int32 %2032, int32 %2046, int32 %2060)

define int32 @_9_planStep0(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  call void umbra::ChainingHashTable::Collector::init(void*) (%Pipeline_cpp_277_)
  return 0
}

declare void @umbra::ChainingHashTable::Collector::init(void*)(int8* %2228)

define int32 @_9_planStep1(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  call void umbra::ChainingHashTable::Collector::destroy(void*) (%Pipeline_cpp_277_)
  return 0
}

declare void @umbra::ChainingHashTable::Collector::destroy(void*)(int8* %2380)

define int32 @_9_planStep2(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

declare void @umbra::ExecutionPlan::setupParallelStep(void*, unsigned int)(int8* %2512, int32 %2526)

define int32 @_9_join_tablescan_part(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 0
  %to = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 1
  %reader = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 2
  %data = load object umbra::RelationMapped::Reader %reader, i32 0, i32 1
  %strings = load object umbra::RelationMapped::Reader %reader, i32 0, i32 2
  %RelationMappedLogic_cpp_473_ = ptrtoint i64 %strings
  %RelationMappedLogic_cpp_475_ = cmpult i64 %from, %to
  condbr %RelationMappedLogic_cpp_475_ %loopBlocks %loopDoneBlocks

loopBlocks:
  %firstTid = phi i64 [%from, %body %RelationMappedLogic_cpp_480_1, %loopDoneTuples]
  %RelationMappedLogic_cpp_478_ = lshr i64 %firstTid, 16
  %RelationMappedLogic_cpp_479_ = shl i64 %RelationMappedLogic_cpp_478_, 16
  %RelationMappedLogic_cpp_479_0 = add i64 %RelationMappedLogic_cpp_479_, 65536
  %RelationMappedLogic_cpp_480_ = cmpult i64 %to, %RelationMappedLogic_cpp_479_0
  %RelationMappedLogic_cpp_480_1 = select i64 %RelationMappedLogic_cpp_480_, %to, %RelationMappedLogic_cpp_479_0
  %RelationMappedLogic_cpp_482_ = mul i64 %RelationMappedLogic_cpp_478_, 112
  %RelationMappedLogic_cpp_482_2 = mul i64 %RelationMappedLogic_cpp_482_, 65536
  %RelationMappedLogic_cpp_482_3 = getelementptr int8 %data, %RelationMappedLogic_cpp_482_2
  %RelationMappedLogic_cpp_483_ = shl i64 %RelationMappedLogic_cpp_478_, 16
  %RelationMappedLogic_cpp_484_ = sub i64 %firstTid, %RelationMappedLogic_cpp_483_
  %RelationMappedLogic_cpp_484_4 = sub i64 %RelationMappedLogic_cpp_480_1, %RelationMappedLogic_cpp_483_
  %RelationMappedLogic_cpp_486_ = cmpne i64 %RelationMappedLogic_cpp_484_, %RelationMappedLogic_cpp_484_4
  condbr %RelationMappedLogic_cpp_486_ %loopTuples %loopDoneTuples

loopTuples:
  %localTid = phi i64 [%RelationMappedLogic_cpp_484_, %loopBlocks %RelationMappedLogic_cpp_493_, %contScan]
  %RelationMappedLogic_cpp_342_ = getelementptr int8 %RelationMappedLogic_cpp_482_3, i64 4718592
  %RelationMappedLogic_cpp_358_ = getelementptr data128 %RelationMappedLogic_cpp_342_, %localTid
  %RelationMappedLogic_cpp_359_ = load int64 %RelationMappedLogic_cpp_358_
  %RelationMappedLogic_cpp_359_5 = load int64 %RelationMappedLogic_cpp_358_, i32 1
  %RelationMappedLogic_cpp_360_ = trunc i32 %RelationMappedLogic_cpp_359_
  %RelationMappedLogic_cpp_361_ = cmpult i32 12, %RelationMappedLogic_cpp_360_
  %RelationMappedLogic_cpp_361_6 = add i64 %RelationMappedLogic_cpp_359_5, %RelationMappedLogic_cpp_473_
  %RelationMappedLogic_cpp_361_7 = select i64 %RelationMappedLogic_cpp_361_, %RelationMappedLogic_cpp_361_6, %RelationMappedLogic_cpp_359_5
  %RelationMappedLogic_cpp_363_ = builddata128 d128 %RelationMappedLogic_cpp_359_ %RelationMappedLogic_cpp_361_7
  %Char_cpp_114_ = extractdata128 i64 %RelationMappedLogic_cpp_363_
  %Char_cpp_115_ = cmpeq i64 %Char_cpp_114_, 2325059504644816903
  condbr %Char_cpp_115_ %then %cont10

then:
  %Char_cpp_116_ = extractdata128 i64 %RelationMappedLogic_cpp_363_
  %Char_cpp_116_8 = cmpeq i64 %Char_cpp_116_, 5787458
  condbr %Char_cpp_116_8 %then9 %else

then9:
  br %cont

else:
  %Char_cpp_119_ = call bool umbra::TextRuntime::compareEqNonOwning(umbra::data128_t, umbra::data128_t) (%RelationMappedLogic_cpp_363_, d128 {2325059504644816903,5787458})
  br %cont

cont:
  %Char_cpp_120_ = phi bool [bool true, %then9 %Char_cpp_119_, %else]
  br %cont10

cont10:
  %Char_cpp_121_ = phi bool [%Char_cpp_120_, %cont bool false, %loopTuples]
  condbr %Char_cpp_121_ %then11 %contScan

then11:
  %RelationMappedLogic_cpp_342_12 = getelementptr int8 %RelationMappedLogic_cpp_482_3, i64 2359296
  %RelationMappedLogic_cpp_358_13 = getelementptr data128 %RelationMappedLogic_cpp_342_12, %localTid
  %RelationMappedLogic_cpp_359_14 = load int64 %RelationMappedLogic_cpp_358_13
  %RelationMappedLogic_cpp_359_15 = load int64 %RelationMappedLogic_cpp_358_13, i32 1
  %RelationMappedLogic_cpp_360_16 = trunc i32 %RelationMappedLogic_cpp_359_14
  %RelationMappedLogic_cpp_361_17 = cmpult i32 12, %RelationMappedLogic_cpp_360_16
  %RelationMappedLogic_cpp_361_18 = add i64 %RelationMappedLogic_cpp_359_15, %RelationMappedLogic_cpp_473_
  %RelationMappedLogic_cpp_361_19 = select i64 %RelationMappedLogic_cpp_361_17, %RelationMappedLogic_cpp_361_18, %RelationMappedLogic_cpp_359_15
  %RelationMappedLogic_cpp_363_20 = builddata128 d128 %RelationMappedLogic_cpp_359_14 %RelationMappedLogic_cpp_361_19
  %Char_cpp_114_21 = extractdata128 i64 %RelationMappedLogic_cpp_363_20
  %Char_cpp_115_22 = cmpeq i64 %Char_cpp_114_21, 7953764044706414600
  condbr %Char_cpp_115_22 %then23 %cont31

then23:
  %Char_cpp_116_24 = extractdata128 i64 %RelationMappedLogic_cpp_363_20
  %Char_cpp_116_25 = cmpeq i64 %Char_cpp_116_24, 858923876
  condbr %Char_cpp_116_25 %then26 %else27

then26:
  br %cont29

else27:
  %Char_cpp_119_28 = call bool umbra::TextRuntime::compareEqNonOwning(umbra::data128_t, umbra::data128_t) (%RelationMappedLogic_cpp_363_20, d128 {7953764044706414600,858923876})
  br %cont29

cont29:
  %Char_cpp_120_30 = phi bool [bool true, %then26 %Char_cpp_119_28, %else27]
  br %cont31

cont31:
  %Char_cpp_121_32 = phi bool [%Char_cpp_120_30, %cont29 bool false, %then11]
  condbr %Char_cpp_121_32 %then33 %contScan

then33:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  %RelationMappedLogic_cpp_347_ = load int32 %RelationMappedLogic_cpp_482_3, %localTid
  %Hash_cpp_264_ = zext i64 %RelationMappedLogic_cpp_347_
  %Hash_cpp_374_ = crc32 i64 5961697176435608501, %Hash_cpp_264_
  %Hash_cpp_375_ = crc32 i64 2231409791114444147, %Hash_cpp_264_
  %Hash_cpp_379_ = rotr i64 %Hash_cpp_375_, 32
  %Hash_cpp_379_34 = xor i64 %Hash_cpp_374_, %Hash_cpp_379_
  %Hash_cpp_379_35 = mul i64 %Hash_cpp_379_34, 2685821657736338717
  %ChainingHashTableLogic_cpp_78_ = call ptr umbra::ChainingHashTable::Collector::collect(unsigned long, unsigned long) (%Pipeline_cpp_277_, %Hash_cpp_379_35, i64 4)
  store int32 %RelationMappedLogic_cpp_347_, %ChainingHashTableLogic_cpp_78_
  br %contScan

contScan:
  %RelationMappedLogic_cpp_493_ = add i64 %localTid, 1
  %RelationMappedLogic_cpp_494_ = cmpne i64 %RelationMappedLogic_cpp_493_, %RelationMappedLogic_cpp_484_4
  condbr %RelationMappedLogic_cpp_494_ %loopTuples %loopDoneTuples

loopDoneTuples:
  %RelationMappedLogic_cpp_496_ = cmpne i64 %RelationMappedLogic_cpp_480_1, %to
  condbr %RelationMappedLogic_cpp_496_ %loopBlocks %loopDoneBlocks

loopDoneBlocks:
  br %stepDone

stepDone:
  return 5
}

declare bool @umbra::TextRuntime::compareEqNonOwning(umbra::data128_t, umbra::data128_t)(data128 %4261, data128 %4275)

declare int8* @umbra::ChainingHashTable::Collector::collect(unsigned long, unsigned long)(object umbra::ChainingHashTable::Collector* %5526, int64 %5540, int64 %5554)

define int32 @_9_planStep3(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  call void umbra::TableScanOperator::Job::destroy(void*) (%CompilationContext_cpp_223_)
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::prepareForInsertEntries(void*, unsigned int) (%CompilationContext_cpp_217_, %state, i32 32)
  call void umbra::ExecutionPlan::preparePerObjectWork(void*, unsigned int) (%state, i32 32)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 8)
  return 7
}

declare void @umbra::TableScanOperator::Job::destroy(void*)(int8* %6029)

declare void @umbra::ChainingHashTable::prepareForInsertEntries(void*, unsigned int)(object umbra::ChainingHashTable* %6111, int8* %6125, int32 %6139)

declare void @umbra::ExecutionPlan::preparePerObjectWork(void*, unsigned int)(int8* %6179, int32 %6193)

define int32 @_9_join_tablescan_part_extra(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_471_ = load int8* %localState
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::insertEntries(umbra::ChainingHashTable::Collector&) (%CompilationContext_cpp_217_, %Pipeline_cpp_471_)
  br %stepDone

stepDone:
  return 8
}

declare void @umbra::ChainingHashTable::insertEntries(umbra::ChainingHashTable::Collector&)(object umbra::ChainingHashTable* %6427, object umbra::ChainingHashTable::Collector* %6441)

define int32 @_9_planStep4(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::finishPerObjectWork(void*) (%state)
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 224
  call void umbra::TableScanOperator::Job::init(void*, void*, unsigned long, umbra::Relation::RestrictionInfo*, unsigned long, unsigned int*, unsigned int) (%CompilationContext_cpp_223_, %CompilationContext_cpp_217_, i64 5, global %6681, i64 0, global %6720, i32 3)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 28816, i32 9, i32 10, i32 11)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 12)
  return 13
}

declare void @umbra::ExecutionPlan::finishPerObjectWork(void*)(int8* %6567)

declare void @umbra::ExecutionPlan::cleanupParallelWork(void*)(int8* %6599)

define int32 @_9_planStep5(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 28736
  call void umbra::ChainingHashTable::Collector::init(void*) (%Pipeline_cpp_277_)
  %Pipeline_cpp_277_0 = getelementptr int8 %localState, i64 32
  call void umbra::Preaggregation::init(umbra::Preaggregation*, unsigned long) (%Pipeline_cpp_277_0, i64 4)
  return 0
}

declare void @umbra::Preaggregation::init(umbra::Preaggregation*, unsigned long)(object umbra::Preaggregation* %7137, int64 %7151)

define int32 @_9_planStep6(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 28736
  call void umbra::ChainingHashTable::Collector::destroy(void*) (%Pipeline_cpp_277_)
  %Pipeline_cpp_277_0 = getelementptr int8 %localState, i64 32
  call void umbra::Preaggregation::destroy(umbra::Preaggregation*) (%Pipeline_cpp_277_0)
  return 0
}

declare void @umbra::Preaggregation::destroy(umbra::Preaggregation*)(object umbra::Preaggregation* %7366)

define int32 @_9_planStep7(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_join_join_tablescan_lineitem(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 0
  %to = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 1
  %reader = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 2
  %data = load object umbra::RelationMapped::Reader %reader, i32 0, i32 1
  %RelationMappedLogic_cpp_475_ = cmpult i64 %from, %to
  condbr %RelationMappedLogic_cpp_475_ %loopBlocks %loopDoneBlocks

loopBlocks:
  %firstTid = phi i64 [%from, %body %RelationMappedLogic_cpp_480_1, %loopDoneTuples]
  %RelationMappedLogic_cpp_478_ = lshr i64 %firstTid, 16
  %RelationMappedLogic_cpp_479_ = shl i64 %RelationMappedLogic_cpp_478_, 16
  %RelationMappedLogic_cpp_479_0 = add i64 %RelationMappedLogic_cpp_479_, 65536
  %RelationMappedLogic_cpp_480_ = cmpult i64 %to, %RelationMappedLogic_cpp_479_0
  %RelationMappedLogic_cpp_480_1 = select i64 %RelationMappedLogic_cpp_480_, %to, %RelationMappedLogic_cpp_479_0
  %RelationMappedLogic_cpp_482_ = mul i64 %RelationMappedLogic_cpp_478_, 116
  %RelationMappedLogic_cpp_482_2 = mul i64 %RelationMappedLogic_cpp_482_, 65536
  %RelationMappedLogic_cpp_482_3 = getelementptr int8 %data, %RelationMappedLogic_cpp_482_2
  %RelationMappedLogic_cpp_483_ = shl i64 %RelationMappedLogic_cpp_478_, 16
  %RelationMappedLogic_cpp_484_ = sub i64 %firstTid, %RelationMappedLogic_cpp_483_
  %RelationMappedLogic_cpp_484_4 = sub i64 %RelationMappedLogic_cpp_480_1, %RelationMappedLogic_cpp_483_
  %RelationMappedLogic_cpp_486_ = cmpne i64 %RelationMappedLogic_cpp_484_, %RelationMappedLogic_cpp_484_4
  condbr %RelationMappedLogic_cpp_486_ %loopTuples %loopDoneTuples

loopTuples:
  %localTid = phi i64 [%RelationMappedLogic_cpp_484_, %loopBlocks %RelationMappedLogic_cpp_493_, %contScan]
  %RelationMappedLogic_cpp_342_ = getelementptr int8 %RelationMappedLogic_cpp_482_3, i64 262144
  %RelationMappedLogic_cpp_347_ = load int32 %RelationMappedLogic_cpp_342_, %localTid
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 320
  %Hash_cpp_264_ = zext i64 %RelationMappedLogic_cpp_347_
  %Hash_cpp_374_ = crc32 i64 5961697176435608501, %Hash_cpp_264_
  %Hash_cpp_375_ = crc32 i64 2231409791114444147, %Hash_cpp_264_
  %Hash_cpp_379_ = rotr i64 %Hash_cpp_375_, 32
  %Hash_cpp_379_5 = xor i64 %Hash_cpp_374_, %Hash_cpp_379_
  %Hash_cpp_379_6 = mul i64 %Hash_cpp_379_5, 2685821657736338717
  %ChainingHashTableLogic_cpp_108_ = call ptr umbra::ChainingHashTable::lookup(unsigned long) (%CompilationContext_cpp_217_, %Hash_cpp_379_6)
  %ChainingHashTableLogic_cpp_110_ = isnotnull ptr %ChainingHashTableLogic_cpp_108_
  condbr %ChainingHashTableLogic_cpp_110_ %looploopHashChain %loopDoneloopHashChain

looploopHashChain:
  %hashEntry = phi ptr [%ChainingHashTableLogic_cpp_108_, %loopTuples %ChainingHashTableLogic_cpp_136_, %continueProbe]
  %ChainingHashTableLogic_cpp_115_ = getelementptr int8 %hashEntry, i64 16
  %MaterializationHelper_cpp_230_ = load int32 %ChainingHashTableLogic_cpp_115_
  %Integer_cpp_82_ = cmpeq i32 %RelationMappedLogic_cpp_347_, %MaterializationHelper_cpp_230_
  condbr %Integer_cpp_82_ %else %continueProbe

else:
  %Hash_cpp_264_7 = zext i64 %MaterializationHelper_cpp_230_
  %Hash_cpp_374_8 = crc32 i64 5961697176435608501, %Hash_cpp_264_7
  %Hash_cpp_375_9 = crc32 i64 2231409791114444147, %Hash_cpp_264_7
  %Hash_cpp_379_10 = rotr i64 %Hash_cpp_375_9, 32
  %Hash_cpp_379_11 = xor i64 %Hash_cpp_374_8, %Hash_cpp_379_10
  %Hash_cpp_379_12 = mul i64 %Hash_cpp_379_11, 2685821657736338717
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  %hashTable = getelementptr object umbra::Preaggregation %Pipeline_cpp_277_, i32 0, i32 0, i32 0
  %PreaggregationLogic_cpp_20_ = and i64 %Hash_cpp_379_12, 1023
  %PreaggregationLogic_cpp_20_13 = load object umbra::Preaggregation::EntryHeader* %hashTable, %PreaggregationLogic_cpp_20_
  %hash = load object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_20_13, i32 0, i32 0
  %PreaggregationLogic_cpp_25_ = cmpne i64 %hash, %Hash_cpp_379_12
  condbr %PreaggregationLogic_cpp_25_ %then %else14

then:
  %PreaggregationLogic_cpp_29_ = call ptr umbra::Preaggregation::addEntry(unsigned long) (%Pipeline_cpp_277_, %Hash_cpp_379_12)
  store int32 %MaterializationHelper_cpp_230_, %PreaggregationLogic_cpp_29_
  br %cont

else14:
  %PreaggregationLogic_cpp_36_ = getelementptr object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_20_13, i32 1
  %MaterializationHelper_cpp_876_ = load int32 %PreaggregationLogic_cpp_36_
  %Integer_cpp_82_15 = cmpeq i32 %MaterializationHelper_cpp_230_, %MaterializationHelper_cpp_876_
  condbr %Integer_cpp_82_15 %else17 %then

else17:
  br %cont

cont:
  %Pipeline_cpp_277_18 = getelementptr int8 %localState, i64 28736
  %RelationMappedLogic_cpp_342_19 = getelementptr int8 %RelationMappedLogic_cpp_482_3, i64 1048576
  %RelationMappedLogic_cpp_348_ = load int64 %RelationMappedLogic_cpp_342_19, %localTid
  %RelationMappedLogic_cpp_342_20 = getelementptr int8 %RelationMappedLogic_cpp_482_3, i64 1572864
  %RelationMappedLogic_cpp_348_21 = load int64 %RelationMappedLogic_cpp_342_20, %localTid
  %Hash_cpp_264_22 = zext i64 %MaterializationHelper_cpp_230_
  %Hash_cpp_374_23 = crc32 i64 5961697176435608501, %Hash_cpp_264_22
  %Hash_cpp_375_24 = crc32 i64 2231409791114444147, %Hash_cpp_264_22
  %Hash_cpp_379_25 = rotr i64 %Hash_cpp_375_24, 32
  %Hash_cpp_379_26 = xor i64 %Hash_cpp_374_23, %Hash_cpp_379_25
  %Hash_cpp_379_27 = mul i64 %Hash_cpp_379_26, 2685821657736338717
  %ChainingHashTableLogic_cpp_78_ = call ptr umbra::ChainingHashTable::Collector::collect(unsigned long, unsigned long) (%Pipeline_cpp_277_18, %Hash_cpp_379_27, i64 20)
  store int32 %MaterializationHelper_cpp_230_, %ChainingHashTableLogic_cpp_78_
  %MaterializationHelper_cpp_161_ = getelementptr int8 %ChainingHashTableLogic_cpp_78_, i64 4
  store int64 %RelationMappedLogic_cpp_348_, %MaterializationHelper_cpp_161_
  %MaterializationHelper_cpp_150_ = getelementptr int8 %MaterializationHelper_cpp_161_, i64 8
  store int64 %RelationMappedLogic_cpp_348_21, %MaterializationHelper_cpp_150_
  br %loopDoneloopHashChain

continueProbe:
  %ChainingHashTableLogic_cpp_136_ = call ptr umbra::ChainingHashTable::lookupNext(void*) (%CompilationContext_cpp_217_, %hashEntry)
  %ChainingHashTableLogic_cpp_137_ = isnotnull ptr %ChainingHashTableLogic_cpp_136_
  condbr %ChainingHashTableLogic_cpp_137_ %looploopHashChain %loopDoneloopHashChain

loopDoneloopHashChain:
  br %contScan

contScan:
  %RelationMappedLogic_cpp_493_ = add i64 %localTid, 1
  %RelationMappedLogic_cpp_494_ = cmpne i64 %RelationMappedLogic_cpp_493_, %RelationMappedLogic_cpp_484_4
  condbr %RelationMappedLogic_cpp_494_ %loopTuples %loopDoneTuples

loopDoneTuples:
  %RelationMappedLogic_cpp_496_ = cmpne i64 %RelationMappedLogic_cpp_480_1, %to
  condbr %RelationMappedLogic_cpp_496_ %loopBlocks %loopDoneBlocks

loopDoneBlocks:
  br %stepDone

stepDone:
  return 12
}

declare int8* @umbra::ChainingHashTable::lookup(unsigned long)(object umbra::ChainingHashTable* %8868, int64 %8882)

declare int8* @umbra::Preaggregation::addEntry(unsigned long)(object umbra::Preaggregation* %9737, int64 %9751)

declare int8* @umbra::ChainingHashTable::lookupNext(void*)(object umbra::ChainingHashTable* %10915, int8* %10929)

define int32 @_9_planStep8(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  call void umbra::TableScanOperator::Job::destroy(void*) (%CompilationContext_cpp_223_)
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 25104
  call void umbra::ChainingHashTable::prepareForInsertEntries(void*, unsigned int) (%CompilationContext_cpp_217_, %state, i32 28736)
  call void umbra::ExecutionPlan::preparePerObjectWork(void*, unsigned int) (%state, i32 28736)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 15)
  return 14
}

define int32 @_9_join_join_tablescan_lineitem_extra(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_471_ = load int8* %localState
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 25104
  call void umbra::ChainingHashTable::insertEntries(umbra::ChainingHashTable::Collector&) (%CompilationContext_cpp_217_, %Pipeline_cpp_471_)
  br %stepDone

stepDone:
  return 15
}

define int32 @_9_planStep9(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::finishPerObjectWork(void*) (%state)
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 512
  call void umbra::AggregationTarget::exchangeTables(void*, unsigned long) (%CompilationContext_cpp_217_, %state, i64 32)
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  call void umbra::AggregationTarget::setupAggregateJob(void*) (%CompilationContext_cpp_217_, %CompilationContext_cpp_223_)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 17)
  return 16
}

declare void @umbra::AggregationTarget::exchangeTables(void*, unsigned long)(object umbra::AggregationTarget* %11876, int8* %11890, int64 %11904)

declare void @umbra::AggregationTarget::setupAggregateJob(void*)(object umbra::AggregationTarget* %11994, int8* %12008)

define int32 @_9_join_join_tablescan_lineitem_extra10(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %PreaggregationLogic_cpp_47_ = load object umbra::AggregationTarget::Fragment* %localState
  %chunks = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 3
  %PreaggregationLogic_cpp_50_ = isnotnull ptr %chunks
  condbr %PreaggregationLogic_cpp_50_ %loopChunk %loopDoneChunk

loopChunk:
  %chunk = phi ptr [%chunks, %body %next4, %loopDoneChunkEntries]
  call void umbra::AggregationTarget::Fragment::checkSize() (%PreaggregationLogic_cpp_47_)
  %hashTable = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 0
  %hashTableShift = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 1
  %PreaggregationLogic_cpp_60_ = getelementptr object umbra::Preaggregation::EntryChunk %chunk, i32 1
  %limit = load object umbra::Preaggregation::EntryChunk %chunk, i32 0, i32 1
  %PreaggregationLogic_cpp_62_ = cmpne ptr %PreaggregationLogic_cpp_60_, %limit
  condbr %PreaggregationLogic_cpp_62_ %loopChunkEntries %loopDoneChunkEntries

loopChunkEntries:
  %entry = phi ptr [%PreaggregationLogic_cpp_60_, %loopChunk %PreaggregationLogic_cpp_110_, %continue]
  %hash = load object umbra::Preaggregation::EntryHeader %entry, i32 0, i32 0
  %PreaggregationLogic_cpp_67_ = lshr i64 %hash, %hashTableShift
  %PreaggregationLogic_cpp_67_0 = getelementptr object umbra::Preaggregation::EntryHeader* %hashTable, %PreaggregationLogic_cpp_67_
  %PreaggregationLogic_cpp_69_ = load object umbra::Preaggregation::EntryHeader* %PreaggregationLogic_cpp_67_0
  %PreaggregationLogic_cpp_71_ = isnotnull ptr %PreaggregationLogic_cpp_69_
  condbr %PreaggregationLogic_cpp_71_ %loopChain %loopDoneChain

loopChain:
  %chainEntry = phi ptr [%PreaggregationLogic_cpp_69_, %loopChunkEntries %next, %noMatch]
  %hash1 = load object umbra::Preaggregation::EntryHeader %chainEntry, i32 0, i32 0
  %PreaggregationLogic_cpp_75_ = cmpeq i64 %hash, %hash1
  condbr %PreaggregationLogic_cpp_75_ %then %noMatch

then:
  %GroupByTranslator_cpp_178_ = getelementptr object umbra::Preaggregation::EntryHeader %entry, i32 1
  %MaterializationHelper_cpp_876_ = load int32 %GroupByTranslator_cpp_178_
  %GroupByTranslator_cpp_179_ = getelementptr object umbra::Preaggregation::EntryHeader %chainEntry, i32 1
  %MaterializationHelper_cpp_876_2 = load int32 %GroupByTranslator_cpp_179_
  %Integer_cpp_82_ = cmpeq i32 %MaterializationHelper_cpp_876_, %MaterializationHelper_cpp_876_2
  condbr %Integer_cpp_82_ %else %noMatch

else:
  br %continue

noMatch:
  %next = load object umbra::Preaggregation::EntryHeader %chainEntry, i32 0, i32 1
  %PreaggregationLogic_cpp_83_ = isnotnull ptr %next
  condbr %PreaggregationLogic_cpp_83_ %loopChain %loopDoneChain

loopDoneChain:
  store object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_69_, %entry, i32 0, i32 1
  store object umbra::Preaggregation::EntryHeader* %entry, %PreaggregationLogic_cpp_67_0
  %count = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 2
  %PreaggregationLogic_cpp_90_ = add i64 %count, 1
  store object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_90_, %PreaggregationLogic_cpp_47_, i32 0, i32 2
  br %continue

continue:
  %PreaggregationLogic_cpp_110_ = getelementptr int8 %entry, i64 20
  %PreaggregationLogic_cpp_111_ = cmpne ptr %PreaggregationLogic_cpp_110_, %limit
  condbr %PreaggregationLogic_cpp_111_ %loopChunkEntries %loopDoneChunkEntries

loopDoneChunkEntries:
  %next4 = load object umbra::Preaggregation::EntryChunk %chunk, i32 0, i32 0
  %PreaggregationLogic_cpp_116_ = isnotnull ptr %next4
  condbr %PreaggregationLogic_cpp_116_ %loopChunk %loopDoneChunk

loopDoneChunk:
  store object umbra::AggregationTarget::Fragment ptr 0, %PreaggregationLogic_cpp_47_, i32 0, i32 3
  br %stepDone

stepDone:
  return 17
}

declare void @umbra::AggregationTarget::Fragment::checkSize()(object umbra::AggregationTarget::Fragment* %12323)

define int32 @_9_planStep11(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 512
  call void umbra::AggregationTarget::setupScanJob(void*) (%CompilationContext_cpp_217_, %CompilationContext_cpp_223_)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 112, i32 18, i32 19, i32 20)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 21)
  return 22
}

declare void @umbra::AggregationTarget::setupScanJob(void*)(object umbra::AggregationTarget* %14056, int8* %14070)

define int32 @_9_planStep12(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  call void umbra::ChainingHashTable::Collector::init(void*) (%Pipeline_cpp_277_)
  return 0
}

define int32 @_9_planStep13(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  call void umbra::ChainingHashTable::Collector::destroy(void*) (%Pipeline_cpp_277_)
  return 0
}

define int32 @_9_planStep14(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_groupjoin_groupbyscan(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::AggregationTarget::ScanMorsel %localState, i32 0, i32 0
  %to = load object umbra::AggregationTarget::ScanMorsel %localState, i32 0, i32 1
  %PreaggregationLogic_cpp_130_ = cmpne ptr %from, %to
  condbr %PreaggregationLogic_cpp_130_ %loopSlots %loopDoneSlots

loopSlots:
  %slot = phi ptr [%from, %body %PreaggregationLogic_cpp_146_, %loopDoneChain]
  %PreaggregationLogic_cpp_135_ = load object umbra::Preaggregation::EntryHeader* %slot
  %PreaggregationLogic_cpp_136_ = isnotnull ptr %PreaggregationLogic_cpp_135_
  condbr %PreaggregationLogic_cpp_136_ %loopChain %loopDoneChain

loopChain:
  %iter = phi ptr [%PreaggregationLogic_cpp_135_, %loopSlots %next, %loopChain]
  %PreaggregationLogic_cpp_140_ = getelementptr int8 %iter, i64 16
  %MaterializationHelper_cpp_876_ = load int32 %PreaggregationLogic_cpp_140_
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  %Hash_cpp_264_ = zext i64 %MaterializationHelper_cpp_876_
  %Hash_cpp_374_ = crc32 i64 5961697176435608501, %Hash_cpp_264_
  %Hash_cpp_375_ = crc32 i64 2231409791114444147, %Hash_cpp_264_
  %Hash_cpp_379_ = rotr i64 %Hash_cpp_375_, 32
  %Hash_cpp_379_0 = xor i64 %Hash_cpp_374_, %Hash_cpp_379_
  %Hash_cpp_379_1 = mul i64 %Hash_cpp_379_0, 2685821657736338717
  %ChainingHashTableLogic_cpp_78_ = call ptr umbra::ChainingHashTable::Collector::collect(unsigned long, unsigned long) (%Pipeline_cpp_277_, %Hash_cpp_379_1, i64 26)
  store int32 %MaterializationHelper_cpp_876_, %ChainingHashTableLogic_cpp_78_
  %MaterializationHelper_cpp_161_ = getelementptr int8 %ChainingHashTableLogic_cpp_78_, i64 4
  store int32 %MaterializationHelper_cpp_876_, %MaterializationHelper_cpp_161_
  %MaterializationHelper_cpp_161_2 = getelementptr int8 %MaterializationHelper_cpp_161_, i64 4
  store int8 i8 0, %MaterializationHelper_cpp_161_2
  %GroupJoinTranslator_cpp_213_ = getelementptr int8 %MaterializationHelper_cpp_161_2, i64 1
  %MaterializationHelper_cpp_726_ = getelementptr int8 %GroupJoinTranslator_cpp_213_, i64 16
  store int64 i64 0, %GroupJoinTranslator_cpp_213_
  %MaterializationHelper_cpp_983_ = getelementptr int8 %GroupJoinTranslator_cpp_213_, i64 8
  store int64 i64 0, %MaterializationHelper_cpp_983_
  store int8 i8 1, %MaterializationHelper_cpp_726_
  %next = load object umbra::Preaggregation::EntryHeader %iter, i32 0, i32 1
  %PreaggregationLogic_cpp_143_ = isnotnull ptr %next
  condbr %PreaggregationLogic_cpp_143_ %loopChain %loopDoneChain

loopDoneChain:
  %PreaggregationLogic_cpp_146_ = getelementptr object umbra::Preaggregation::EntryHeader* %slot, i32 1
  %PreaggregationLogic_cpp_147_ = cmpne ptr %PreaggregationLogic_cpp_146_, %to
  condbr %PreaggregationLogic_cpp_147_ %loopSlots %loopDoneSlots

loopDoneSlots:
  br %stepDone

stepDone:
  return 21
}

define int32 @_9_planStep15(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 464
  call void umbra::ChainingHashTable::prepareForInsertEntries(void*, unsigned int) (%CompilationContext_cpp_217_, %state, i32 32)
  call void umbra::ExecutionPlan::preparePerObjectWork(void*, unsigned int) (%state, i32 32)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 24)
  return 23
}

define int32 @_9_groupjoin_groupbyscan_extra(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_471_ = load int8* %localState
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 464
  call void umbra::ChainingHashTable::insertEntries(umbra::ChainingHashTable::Collector&) (%CompilationContext_cpp_217_, %Pipeline_cpp_471_)
  br %stepDone

stepDone:
  return 24
}

define int32 @_9_planStep16(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::finishPerObjectWork(void*) (%state)
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 368
  call void umbra::TableScanOperator::Job::init(void*, void*, unsigned long, umbra::Relation::RestrictionInfo*, unsigned long, unsigned int*, unsigned int) (%CompilationContext_cpp_223_, %CompilationContext_cpp_217_, i64 5, global %16646, i64 1, global %16757, i32 2)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 32, i32 25, i32 26, i32 27)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 28)
  return 29
}

define int32 @_9_planStep17(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_planStep18(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_planStep19(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_groupjoin_tablescan_lineitem(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 0
  %to = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 1
  %reader = load object umbra::TableScanOperator::Morsel %localState, i32 0, i32 2
  %data = load object umbra::RelationMapped::Reader %reader, i32 0, i32 1
  %RelationMappedLogic_cpp_475_ = cmpult i64 %from, %to
  condbr %RelationMappedLogic_cpp_475_ %loopBlocks %loopDoneBlocks

loopBlocks:
  %firstTid = phi i64 [%from, %body %RelationMappedLogic_cpp_480_1, %loopDoneTuples]
  %RelationMappedLogic_cpp_478_ = lshr i64 %firstTid, 16
  %RelationMappedLogic_cpp_479_ = shl i64 %RelationMappedLogic_cpp_478_, 16
  %RelationMappedLogic_cpp_479_0 = add i64 %RelationMappedLogic_cpp_479_, 65536
  %RelationMappedLogic_cpp_480_ = cmpult i64 %to, %RelationMappedLogic_cpp_479_0
  %RelationMappedLogic_cpp_480_1 = select i64 %RelationMappedLogic_cpp_480_, %to, %RelationMappedLogic_cpp_479_0
  %RelationMappedLogic_cpp_482_ = mul i64 %RelationMappedLogic_cpp_478_, 116
  %RelationMappedLogic_cpp_482_2 = mul i64 %RelationMappedLogic_cpp_482_, 65536
  %RelationMappedLogic_cpp_482_3 = getelementptr int8 %data, %RelationMappedLogic_cpp_482_2
  %RelationMappedLogic_cpp_483_ = shl i64 %RelationMappedLogic_cpp_478_, 16
  %RelationMappedLogic_cpp_484_ = sub i64 %firstTid, %RelationMappedLogic_cpp_483_
  %RelationMappedLogic_cpp_484_4 = sub i64 %RelationMappedLogic_cpp_480_1, %RelationMappedLogic_cpp_483_
  %RelationMappedLogic_cpp_486_ = cmpne i64 %RelationMappedLogic_cpp_484_, %RelationMappedLogic_cpp_484_4
  condbr %RelationMappedLogic_cpp_486_ %loopTuples %loopDoneTuples

loopTuples:
  %localTid = phi i64 [%RelationMappedLogic_cpp_484_, %loopBlocks %RelationMappedLogic_cpp_493_, %contScan]
  %RelationMappedLogic_cpp_342_ = getelementptr int8 %RelationMappedLogic_cpp_482_3, i64 262144
  %RelationMappedLogic_cpp_347_ = load int32 %RelationMappedLogic_cpp_342_, %localTid
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 464
  %Hash_cpp_264_ = zext i64 %RelationMappedLogic_cpp_347_
  %Hash_cpp_374_ = crc32 i64 5961697176435608501, %Hash_cpp_264_
  %Hash_cpp_375_ = crc32 i64 2231409791114444147, %Hash_cpp_264_
  %Hash_cpp_379_ = rotr i64 %Hash_cpp_375_, 32
  %Hash_cpp_379_5 = xor i64 %Hash_cpp_374_, %Hash_cpp_379_
  %Hash_cpp_379_6 = mul i64 %Hash_cpp_379_5, 2685821657736338717
  %ChainingHashTableLogic_cpp_108_ = call ptr umbra::ChainingHashTable::lookup(unsigned long) (%CompilationContext_cpp_217_, %Hash_cpp_379_6)
  %ChainingHashTableLogic_cpp_110_ = isnotnull ptr %ChainingHashTableLogic_cpp_108_
  condbr %ChainingHashTableLogic_cpp_110_ %looploopHashChain %loopDoneloopHashChain

looploopHashChain:
  %hashEntry = phi ptr [%ChainingHashTableLogic_cpp_108_, %loopTuples %ChainingHashTableLogic_cpp_136_, %continueProbe]
  %ChainingHashTableLogic_cpp_115_ = getelementptr int8 %hashEntry, i64 16
  %MaterializationHelper_cpp_230_ = load int32 %ChainingHashTableLogic_cpp_115_
  %MaterializationHelper_cpp_233_ = getelementptr int8 %ChainingHashTableLogic_cpp_115_, i64 4
  %MaterializationHelper_cpp_233_8 = getelementptr int8 %MaterializationHelper_cpp_233_, i64 4
  %Integer_cpp_82_ = cmpeq i32 %RelationMappedLogic_cpp_347_, %MaterializationHelper_cpp_230_
  condbr %Integer_cpp_82_ %else %continueProbe

else:
  %RelationMappedLogic_cpp_342_9 = getelementptr int8 %RelationMappedLogic_cpp_482_3, i64 1048576
  %RelationMappedLogic_cpp_348_ = load int64 %RelationMappedLogic_cpp_342_9, %localTid
  %GroupJoinTranslator_cpp_250_ = atomicrmwxchg int8 i8 2, %MaterializationHelper_cpp_233_8
  %CodeGen_cpp_442_ = cmpule i8 2, %GroupJoinTranslator_cpp_250_
  condbr %CodeGen_cpp_442_ %then %cont

then:
  call void umbra::RuntimeFunctions::lockSpinlock(void*, unsigned char, unsigned char) (%MaterializationHelper_cpp_233_8, i8 2, %GroupJoinTranslator_cpp_250_)
  br %cont

cont:
  %GroupJoinTranslator_cpp_254_ = getelementptr int8 %MaterializationHelper_cpp_233_8, i64 1
  %MaterializationHelper_cpp_726_ = getelementptr int8 %GroupJoinTranslator_cpp_254_, i64 16
  %MaterializationHelper_cpp_727_ = load int8 %MaterializationHelper_cpp_726_
  %MaterializationHelper_cpp_780_ = and i8 %MaterializationHelper_cpp_727_, 1
  %MaterializationHelper_cpp_780_10 = cmpne i8 %MaterializationHelper_cpp_780_, 0
  condbr %MaterializationHelper_cpp_780_10 %then11 %else12

then11:
  %MaterializationHelper_cpp_752_ = and i8 %MaterializationHelper_cpp_727_, -2
  store int64 %RelationMappedLogic_cpp_348_, %GroupJoinTranslator_cpp_254_
  store int8 %MaterializationHelper_cpp_752_, %MaterializationHelper_cpp_726_
  br %cont14

else12:
  %MaterializationHelper_cpp_977_ = load int64 %GroupJoinTranslator_cpp_254_
  %Numeric_cpp_777_ = checkedsadd i64 %MaterializationHelper_cpp_977_, %RelationMappedLogic_cpp_348_ %cont13 %overflow

cont13:
  store int64 %Numeric_cpp_777_, %GroupJoinTranslator_cpp_254_
  br %cont14

cont14:
  %MaterializationHelper_cpp_977_15 = getelementptr int8 %GroupJoinTranslator_cpp_254_, i64 8
  %MaterializationHelper_cpp_977_16 = load int64 %MaterializationHelper_cpp_977_15
  %Aggregate_cpp_213_ = add i64 %MaterializationHelper_cpp_977_16, 1
  %MaterializationHelper_cpp_983_ = getelementptr int8 %GroupJoinTranslator_cpp_254_, i64 8
  store int64 %Aggregate_cpp_213_, %MaterializationHelper_cpp_983_
  %GroupJoinTranslator_cpp_258_ = atomicrmwxchg int8 i8 1, %MaterializationHelper_cpp_233_8
  %CodeGen_cpp_451_ = cmpult i8 2, %GroupJoinTranslator_cpp_258_
  condbr %CodeGen_cpp_451_ %then17 %cont18

then17:
  call void umbra::RuntimeFunctions::unlockedSpinlock(void*) (%MaterializationHelper_cpp_233_8)
  br %cont18

cont18:
  br %loopDoneloopHashChain

continueProbe:
  %ChainingHashTableLogic_cpp_136_ = call ptr umbra::ChainingHashTable::lookupNext(void*) (%CompilationContext_cpp_217_, %hashEntry)
  %ChainingHashTableLogic_cpp_137_ = isnotnull ptr %ChainingHashTableLogic_cpp_136_
  condbr %ChainingHashTableLogic_cpp_137_ %looploopHashChain %loopDoneloopHashChain

loopDoneloopHashChain:
  br %contScan

contScan:
  %RelationMappedLogic_cpp_493_ = add i64 %localTid, 1
  %RelationMappedLogic_cpp_494_ = cmpne i64 %RelationMappedLogic_cpp_493_, %RelationMappedLogic_cpp_484_4
  condbr %RelationMappedLogic_cpp_494_ %loopTuples %loopDoneTuples

loopDoneTuples:
  %RelationMappedLogic_cpp_496_ = cmpne i64 %RelationMappedLogic_cpp_480_1, %to
  condbr %RelationMappedLogic_cpp_496_ %loopBlocks %loopDoneBlocks

loopDoneBlocks:
  br %stepDone

stepDone:
  return 28

overflow:
  call void umbra::RuntimeFunctions::throwOverflow() ()
  unreachable
}

declare void @umbra::RuntimeFunctions::lockSpinlock(void*, unsigned char, unsigned char)(int8* %19258, int8 %19272, int8 %19286)

declare void @umbra::RuntimeFunctions::throwOverflow()()

declare void @umbra::RuntimeFunctions::unlockedSpinlock(void*)(int8* %20209)

define int32 @_9_planStep20(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  call void umbra::TableScanOperator::Job::destroy(void*) (%CompilationContext_cpp_223_)
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  %CompilationContext_cpp_223_0 = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 464
  call void umbra::ChainingHashTable::ScanJob::init(void*, void*) (%CompilationContext_cpp_223_0, %CompilationContext_cpp_217_)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 28736, i32 30, i32 31, i32 32)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 33)
  return 34
}

declare void @umbra::ChainingHashTable::ScanJob::init(void*, void*)(int8* %20827, int8* %20841)

define int32 @_9_planStep21(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  call void umbra::Preaggregation::init(umbra::Preaggregation*, unsigned long) (%Pipeline_cpp_277_, i64 9)
  return 0
}

define int32 @_9_planStep22(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  call void umbra::Preaggregation::destroy(umbra::Preaggregation*) (%Pipeline_cpp_277_)
  return 0
}

define int32 @_9_planStep23(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_groupby_join_map_groupjoin(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::ChainingHashTable::ScanMorsel %localState, i32 0, i32 0
  %to = load object umbra::ChainingHashTable::ScanMorsel %localState, i32 0, i32 1
  %ChainingHashTableLogic_cpp_161_ = cmpne ptr %from, %to
  %transaction = load object umbra::GlobalStateHeader %state, i32 0, i32 0
  %canceled = getelementptr object umbra::Transaction %transaction, i32 0, i32 2
  condbr %ChainingHashTableLogic_cpp_161_ %loopSlots %loopDoneSlots

loopSlots:
  %slot = phi ptr [%from, %body %ChainingHashTableLogic_cpp_185_, %loopDoneEntries]
  %ChainingHashTableLogic_cpp_164_ = load int64 %slot
  %ChainingHashTableLogic_cpp_166_ = lshr i64 %ChainingHashTableLogic_cpp_164_, 16
  %ChainingHashTableLogic_cpp_167_ = inttoptr ptr %ChainingHashTableLogic_cpp_166_
  %ChainingHashTableLogic_cpp_168_ = isnotnull ptr %ChainingHashTableLogic_cpp_167_
  condbr %ChainingHashTableLogic_cpp_168_ %loopEntries %loopDoneEntries

loopEntries:
  %entry = phi ptr [%ChainingHashTableLogic_cpp_167_, %loopSlots %ChainingHashTableLogic_cpp_181_40, %continue]
  %ChainingHashTableLogic_cpp_174_ = getelementptr int8 %entry, i64 16
  %MaterializationHelper_cpp_230_ = load int32 %ChainingHashTableLogic_cpp_174_
  %MaterializationHelper_cpp_233_ = getelementptr int8 %ChainingHashTableLogic_cpp_174_, i64 4
  %MaterializationHelper_cpp_233_1 = getelementptr int8 %MaterializationHelper_cpp_233_, i64 4
  %GroupJoinTranslator_cpp_333_ = getelementptr int8 %MaterializationHelper_cpp_233_1, i64 1
  %MaterializationHelper_cpp_726_ = getelementptr int8 %GroupJoinTranslator_cpp_333_, i64 16
  %MaterializationHelper_cpp_727_ = load int8 %MaterializationHelper_cpp_726_
  %MaterializationHelper_cpp_780_ = and i8 %MaterializationHelper_cpp_727_, 1
  %MaterializationHelper_cpp_780_3 = cmpne i8 %MaterializationHelper_cpp_780_, 0
  condbr %MaterializationHelper_cpp_780_3 %then %else

then:
  br %cont

else:
  %MaterializationHelper_cpp_977_ = load int64 %GroupJoinTranslator_cpp_333_
  br %cont

cont:
  %Aggregate_cpp_132_ = phi i64 [i64 0, %then %MaterializationHelper_cpp_977_, %else]
  %MaterializationHelper_cpp_977_4 = getelementptr int8 %GroupJoinTranslator_cpp_333_, i64 8
  %MaterializationHelper_cpp_977_5 = load int64 %MaterializationHelper_cpp_977_4
  condbr %MaterializationHelper_cpp_780_3 %then6 %else7

then6:
  br %cont11

else7:
  %BigNumeric_cpp_863_ = ashr i64 %Aggregate_cpp_132_, 63
  %BigNumeric_cpp_863_8 = builddata128 d128 %Aggregate_cpp_132_ %BigNumeric_cpp_863_
  %BigNumeric_cpp_863_9 = ashr i64 %MaterializationHelper_cpp_977_5, 63
  %BigNumeric_cpp_863_10 = builddata128 d128 %MaterializationHelper_cpp_977_5 %BigNumeric_cpp_863_9
  %Numeric_cpp_627_ = call d128 umbra::BigNumericRuntime::divTrap(umbra::data128_t, umbra::data128_t, unsigned int) (%BigNumeric_cpp_863_8, %BigNumeric_cpp_863_10, i32 19)
  br %cont11

cont11:
  %CodeGenerationHelpers_cpp_94_ = phi d128 [d128 {0,0}, %then6 %Numeric_cpp_627_, %else7]
  condbr %MaterializationHelper_cpp_780_3 %then12 %else13

then12:
  br %cont14

else13:
  %BigNumeric_cpp_630_ = call d128 umbra::BigNumericRuntime::mulTrap(umbra::data128_t, umbra::data128_t) (d128 {2,0}, %CodeGenerationHelpers_cpp_94_)
  br %cont14

cont14:
  %CodeGenerationHelpers_cpp_94_15 = phi d128 [d128 {0,0}, %then12 %BigNumeric_cpp_630_, %else13]
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 25104
  %Hash_cpp_264_ = zext i64 %MaterializationHelper_cpp_230_
  %Hash_cpp_374_ = crc32 i64 5961697176435608501, %Hash_cpp_264_
  %Hash_cpp_375_ = crc32 i64 2231409791114444147, %Hash_cpp_264_
  %Hash_cpp_379_ = rotr i64 %Hash_cpp_375_, 32
  %Hash_cpp_379_16 = xor i64 %Hash_cpp_374_, %Hash_cpp_379_
  %Hash_cpp_379_17 = mul i64 %Hash_cpp_379_16, 2685821657736338717
  %ChainingHashTableLogic_cpp_108_ = call ptr umbra::ChainingHashTable::lookup(unsigned long) (%CompilationContext_cpp_217_, %Hash_cpp_379_17)
  %ChainingHashTableLogic_cpp_110_ = isnotnull ptr %ChainingHashTableLogic_cpp_108_
  condbr %ChainingHashTableLogic_cpp_110_ %looploopHashChain %loopDoneloopHashChain

looploopHashChain:
  %hashEntry = phi ptr [%ChainingHashTableLogic_cpp_108_, %cont14 %ChainingHashTableLogic_cpp_136_, %continueProbe]
  %ChainingHashTableLogic_cpp_115_ = getelementptr int8 %hashEntry, i64 16
  %MaterializationHelper_cpp_230_18 = load int32 %ChainingHashTableLogic_cpp_115_
  %MaterializationHelper_cpp_233_19 = getelementptr int8 %ChainingHashTableLogic_cpp_115_, i64 4
  %MaterializationHelper_cpp_230_20 = load int64 %MaterializationHelper_cpp_233_19
  %MaterializationHelper_cpp_229_ = getelementptr int8 %MaterializationHelper_cpp_233_19, i64 8
  %MaterializationHelper_cpp_230_21 = load int64 %MaterializationHelper_cpp_229_
  %Integer_cpp_82_ = cmpeq i32 %MaterializationHelper_cpp_230_, %MaterializationHelper_cpp_230_18
  condbr %Integer_cpp_82_ %else23 %checkCancellation

else23:
  %BigNumeric_cpp_310_ = call i32 umbra::BigNumericRuntime::compareIntShiftUp(umbra::data128_t, long, unsigned int) (%CodeGenerationHelpers_cpp_94_15, %MaterializationHelper_cpp_230_20, i32 20)
  %BigNumeric_cpp_422_ = cmpslt i32 0, %BigNumeric_cpp_310_
  %Value_cpp_126_ = not bool %MaterializationHelper_cpp_780_3
  %Value_cpp_126_24 = and bool %BigNumeric_cpp_422_, %Value_cpp_126_
  condbr %Value_cpp_126_24 %then25 %checkCancellation

then25:
  %Pipeline_cpp_277_ = getelementptr int8 %localState, i64 32
  %hashTable = getelementptr object umbra::Preaggregation %Pipeline_cpp_277_, i32 0, i32 0, i32 0
  %PreaggregationLogic_cpp_20_ = load object umbra::Preaggregation::EntryHeader* %hashTable, i64 4
  %hash = load object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_20_, i32 0, i32 0
  %PreaggregationLogic_cpp_25_ = cmpne i64 %hash, 3749646514382295044
  condbr %PreaggregationLogic_cpp_25_ %then26 %else28

then26:
  %PreaggregationLogic_cpp_29_ = call ptr umbra::Preaggregation::addEntry(unsigned long) (%Pipeline_cpp_277_, i64 3749646514382295044)
  %MaterializationHelper_cpp_726_27 = getelementptr int8 %PreaggregationLogic_cpp_29_, i64 8
  store int64 %MaterializationHelper_cpp_230_21, %PreaggregationLogic_cpp_29_
  store int8 i8 0, %MaterializationHelper_cpp_726_27
  br %cont38

else28:
  %PreaggregationLogic_cpp_36_ = getelementptr object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_20_, i32 1
  %MaterializationHelper_cpp_726_29 = getelementptr int8 %PreaggregationLogic_cpp_36_, i64 8
  %MaterializationHelper_cpp_727_30 = load int8 %MaterializationHelper_cpp_726_29
  %MaterializationHelper_cpp_780_31 = and i8 %MaterializationHelper_cpp_727_30, 1
  %MaterializationHelper_cpp_780_32 = cmpne i8 %MaterializationHelper_cpp_780_31, 0
  condbr %MaterializationHelper_cpp_780_32 %then33 %else34

then33:
  %MaterializationHelper_cpp_752_ = and i8 %MaterializationHelper_cpp_727_30, -2
  store int64 %MaterializationHelper_cpp_230_21, %PreaggregationLogic_cpp_36_
  store int8 %MaterializationHelper_cpp_752_, %MaterializationHelper_cpp_726_29
  br %cont37

else34:
  %MaterializationHelper_cpp_977_35 = load int64 %PreaggregationLogic_cpp_36_
  %Numeric_cpp_777_ = checkedsadd i64 %MaterializationHelper_cpp_977_35, %MaterializationHelper_cpp_230_21 %cont36 %overflow

cont36:
  store int64 %Numeric_cpp_777_, %PreaggregationLogic_cpp_36_
  br %cont37

cont37:
  br %cont38

cont38:
  br %checkCancellation

checkCancellation:
  %ChainingHashTableLogic_cpp_129_ = atomicload int8 %canceled
  %ChainingHashTableLogic_cpp_129_39 = cmpne i8 %ChainingHashTableLogic_cpp_129_, 0
  condbr %ChainingHashTableLogic_cpp_129_39 %cancellation %continueProbe

continueProbe:
  %ChainingHashTableLogic_cpp_136_ = call ptr umbra::ChainingHashTable::lookupNext(void*) (%CompilationContext_cpp_217_, %hashEntry)
  %ChainingHashTableLogic_cpp_137_ = isnotnull ptr %ChainingHashTableLogic_cpp_136_
  condbr %ChainingHashTableLogic_cpp_137_ %looploopHashChain %loopDoneloopHashChain

loopDoneloopHashChain:
  br %continue

continue:
  %ChainingHashTableLogic_cpp_181_ = getelementptr int8 %entry, i64 8
  %ChainingHashTableLogic_cpp_181_40 = load int8* %ChainingHashTableLogic_cpp_181_
  %ChainingHashTableLogic_cpp_182_ = isnotnull ptr %ChainingHashTableLogic_cpp_181_40
  condbr %ChainingHashTableLogic_cpp_182_ %loopEntries %loopDoneEntries

loopDoneEntries:
  %ChainingHashTableLogic_cpp_185_ = getelementptr int64 %slot, i32 1
  %ChainingHashTableLogic_cpp_186_ = cmpne ptr %ChainingHashTableLogic_cpp_185_, %to
  condbr %ChainingHashTableLogic_cpp_186_ %loopSlots %loopDoneSlots

loopDoneSlots:
  br %stepDone

stepDone:
  return 33

overflow:
  call void umbra::RuntimeFunctions::throwOverflow() ()
  unreachable

cancellation:
  call void umbra::RuntimeFunctions::checkForCancellation() ()
  unreachable
}

declare data128 @umbra::BigNumericRuntime::divTrap(umbra::data128_t, umbra::data128_t, unsigned int)(data128 %22833, data128 %22847, int32 %22861)

declare data128 @umbra::BigNumericRuntime::mulTrap(umbra::data128_t, umbra::data128_t)(data128 %23034, data128 %23048)

declare int32 @umbra::BigNumericRuntime::compareIntShiftUp(umbra::data128_t, long, unsigned int)(data128 %23993, int64 %24007, int32 %24021)

declare void @umbra::RuntimeFunctions::checkForCancellation()()

define int32 @_9_planStep24(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 25152
  call void umbra::AggregationTarget::exchangeTables(void*, unsigned long) (%CompilationContext_cpp_217_, %state, i64 32)
  %CompilationContext_cpp_223_0 = getelementptr int8 %state, i64 56
  call void umbra::AggregationTarget::setupAggregateJob(void*) (%CompilationContext_cpp_217_, %CompilationContext_cpp_223_0)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 36)
  return 35
}

define int32 @_9_groupby_join_map_groupjoin_extra(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %PreaggregationLogic_cpp_47_ = load object umbra::AggregationTarget::Fragment* %localState
  %chunks = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 3
  %PreaggregationLogic_cpp_50_ = isnotnull ptr %chunks
  condbr %PreaggregationLogic_cpp_50_ %loopChunk %loopDoneChunk

loopChunk:
  %chunk = phi ptr [%chunks, %body %next15, %loopDoneChunkEntries]
  call void umbra::AggregationTarget::Fragment::checkSize() (%PreaggregationLogic_cpp_47_)
  %hashTable = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 0
  %hashTableShift = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 1
  %PreaggregationLogic_cpp_60_ = getelementptr object umbra::Preaggregation::EntryChunk %chunk, i32 1
  %limit = load object umbra::Preaggregation::EntryChunk %chunk, i32 0, i32 1
  %PreaggregationLogic_cpp_62_ = cmpne ptr %PreaggregationLogic_cpp_60_, %limit
  condbr %PreaggregationLogic_cpp_62_ %loopChunkEntries %loopDoneChunkEntries

loopChunkEntries:
  %entry = phi ptr [%PreaggregationLogic_cpp_60_, %loopChunk %PreaggregationLogic_cpp_110_, %continue]
  %hash = load object umbra::Preaggregation::EntryHeader %entry, i32 0, i32 0
  %PreaggregationLogic_cpp_67_ = lshr i64 %hash, %hashTableShift
  %PreaggregationLogic_cpp_67_0 = getelementptr object umbra::Preaggregation::EntryHeader* %hashTable, %PreaggregationLogic_cpp_67_
  %PreaggregationLogic_cpp_69_ = load object umbra::Preaggregation::EntryHeader* %PreaggregationLogic_cpp_67_0
  %PreaggregationLogic_cpp_71_ = isnotnull ptr %PreaggregationLogic_cpp_69_
  condbr %PreaggregationLogic_cpp_71_ %loopChain %loopDoneChain

loopChain:
  %chainEntry = phi ptr [%PreaggregationLogic_cpp_69_, %loopChunkEntries %next, %noMatch]
  %hash1 = load object umbra::Preaggregation::EntryHeader %chainEntry, i32 0, i32 0
  %PreaggregationLogic_cpp_75_ = cmpeq i64 %hash, %hash1
  condbr %PreaggregationLogic_cpp_75_ %then %noMatch

then:
  %GroupByTranslator_cpp_188_ = getelementptr int8 %entry, i64 16
  %GroupByTranslator_cpp_188_2 = getelementptr int8 %chainEntry, i64 16
  %MaterializationHelper_cpp_726_ = getelementptr int8 %GroupByTranslator_cpp_188_2, i64 8
  %MaterializationHelper_cpp_727_ = load int8 %MaterializationHelper_cpp_726_
  %MaterializationHelper_cpp_780_ = and i8 %MaterializationHelper_cpp_727_, 1
  %MaterializationHelper_cpp_780_3 = cmpne i8 %MaterializationHelper_cpp_780_, 0
  %MaterializationHelper_cpp_726_4 = getelementptr int8 %GroupByTranslator_cpp_188_, i64 8
  %MaterializationHelper_cpp_727_5 = load int8 %MaterializationHelper_cpp_726_4
  %MaterializationHelper_cpp_780_6 = and i8 %MaterializationHelper_cpp_727_5, 1
  %MaterializationHelper_cpp_780_7 = cmpne i8 %MaterializationHelper_cpp_780_6, 0
  condbr %MaterializationHelper_cpp_780_7 %then8 %else

then8:
  br %cont14

else:
  %MaterializationHelper_cpp_752_ = and i8 %MaterializationHelper_cpp_727_, -2
  condbr %MaterializationHelper_cpp_780_3 %then9 %else10

then9:
  %MaterializationHelper_cpp_977_ = load int64 %GroupByTranslator_cpp_188_
  store int64 %MaterializationHelper_cpp_977_, %GroupByTranslator_cpp_188_2
  br %cont13

else10:
  %MaterializationHelper_cpp_977_11 = load int64 %GroupByTranslator_cpp_188_2
  %MaterializationHelper_cpp_977_12 = load int64 %GroupByTranslator_cpp_188_
  %Numeric_cpp_777_ = checkedsadd i64 %MaterializationHelper_cpp_977_11, %MaterializationHelper_cpp_977_12 %cont %overflow

cont:
  store int64 %Numeric_cpp_777_, %GroupByTranslator_cpp_188_2
  br %cont13

cont13:
  br %cont14

cont14:
  %MaterializationHelper_cpp_819_ = phi i8 [%MaterializationHelper_cpp_727_, %then8 %MaterializationHelper_cpp_752_, %cont13]
  store int8 %MaterializationHelper_cpp_819_, %MaterializationHelper_cpp_726_
  br %continue

noMatch:
  %next = load object umbra::Preaggregation::EntryHeader %chainEntry, i32 0, i32 1
  %PreaggregationLogic_cpp_83_ = isnotnull ptr %next
  condbr %PreaggregationLogic_cpp_83_ %loopChain %loopDoneChain

loopDoneChain:
  store object umbra::Preaggregation::EntryHeader %PreaggregationLogic_cpp_69_, %entry, i32 0, i32 1
  store object umbra::Preaggregation::EntryHeader* %entry, %PreaggregationLogic_cpp_67_0
  %count = load object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_47_, i32 0, i32 2
  %PreaggregationLogic_cpp_90_ = add i64 %count, 1
  store object umbra::AggregationTarget::Fragment %PreaggregationLogic_cpp_90_, %PreaggregationLogic_cpp_47_, i32 0, i32 2
  br %continue

continue:
  %PreaggregationLogic_cpp_110_ = getelementptr int8 %entry, i64 25
  %PreaggregationLogic_cpp_111_ = cmpne ptr %PreaggregationLogic_cpp_110_, %limit
  condbr %PreaggregationLogic_cpp_111_ %loopChunkEntries %loopDoneChunkEntries

loopDoneChunkEntries:
  %next15 = load object umbra::Preaggregation::EntryChunk %chunk, i32 0, i32 0
  %PreaggregationLogic_cpp_116_ = isnotnull ptr %next15
  condbr %PreaggregationLogic_cpp_116_ %loopChunk %loopDoneChunk

loopDoneChunk:
  store object umbra::AggregationTarget::Fragment ptr 0, %PreaggregationLogic_cpp_47_, i32 0, i32 3
  br %stepDone

stepDone:
  return 36

overflow:
  call void umbra::RuntimeFunctions::throwOverflow() ()
  unreachable
}

define int32 @_9_planStep25(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  %CompilationContext_cpp_223_ = getelementptr int8 %state, i64 56
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 25152
  call void umbra::AggregationTarget::setupScanJob(void*) (%CompilationContext_cpp_217_, %CompilationContext_cpp_223_)
  call void umbra::ExecutionPlan::setupParallelWork(void*, unsigned int, unsigned int, unsigned int, unsigned int) (%state, i32 32, i32 37, i32 38, i32 39)
  call void umbra::ExecutionPlan::setupParallelStep(void*, unsigned int) (%state, i32 40)
  return 41
}

define int32 @_9_planStep26(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_planStep27(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_planStep28(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  return 0
}

define int32 @_9_map_map_groupby(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %from = load object umbra::AggregationTarget::ScanMorsel %localState, i32 0, i32 0
  %to = load object umbra::AggregationTarget::ScanMorsel %localState, i32 0, i32 1
  %PreaggregationLogic_cpp_130_ = cmpne ptr %from, %to
  condbr %PreaggregationLogic_cpp_130_ %loopSlots %loopDoneSlots

loopSlots:
  %slot = phi ptr [%from, %body %PreaggregationLogic_cpp_146_, %loopDoneChain]
  %PreaggregationLogic_cpp_135_ = load object umbra::Preaggregation::EntryHeader* %slot
  %PreaggregationLogic_cpp_136_ = isnotnull ptr %PreaggregationLogic_cpp_135_
  condbr %PreaggregationLogic_cpp_136_ %loopChain %loopDoneChain

loopChain:
  %iter = phi ptr [%PreaggregationLogic_cpp_135_, %loopSlots %next, %cont11]
  %PreaggregationLogic_cpp_140_ = getelementptr int8 %iter, i64 16
  %MaterializationHelper_cpp_726_ = getelementptr int8 %PreaggregationLogic_cpp_140_, i64 8
  %MaterializationHelper_cpp_727_ = load int8 %MaterializationHelper_cpp_726_
  %MaterializationHelper_cpp_780_ = and i8 %MaterializationHelper_cpp_727_, 1
  %MaterializationHelper_cpp_780_0 = cmpne i8 %MaterializationHelper_cpp_780_, 0
  condbr %MaterializationHelper_cpp_780_0 %then %else

then:
  br %cont

else:
  %MaterializationHelper_cpp_977_ = load int64 %PreaggregationLogic_cpp_140_
  br %cont

cont:
  %Aggregate_cpp_132_ = phi i64 [i64 0, %then %MaterializationHelper_cpp_977_, %else]
  condbr %MaterializationHelper_cpp_780_0 %then1 %else2

then1:
  br %cont4

else2:
  %BigNumeric_cpp_863_ = ashr i64 %Aggregate_cpp_132_, 63
  %BigNumeric_cpp_863_3 = builddata128 d128 %Aggregate_cpp_132_ %BigNumeric_cpp_863_
  %Numeric_cpp_627_ = call d128 umbra::BigNumericRuntime::divTrap(umbra::data128_t, umbra::data128_t, unsigned int) (%BigNumeric_cpp_863_3, d128 {70,0}, i32 5)
  br %cont4

cont4:
  %CodeGenerationHelpers_cpp_94_ = phi d128 [d128 {0,0}, %then1 %Numeric_cpp_627_, %else2]
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 120
  %sql_cpp_129_ = atomicrmwxchg int8 i8 1, %CompilationContext_cpp_217_
  %CodeGen_cpp_442_ = cmpule i8 1, %sql_cpp_129_
  condbr %CodeGen_cpp_442_ %then5 %cont6

then5:
  call void umbra::RuntimeFunctions::lockSpinlock(void*, unsigned char, unsigned char) (%CompilationContext_cpp_217_, i8 1, %sql_cpp_129_)
  br %cont6

cont6:
  condbr %MaterializationHelper_cpp_780_0 %then7 %else8

then7:
  call void umbra::RuntimeFunctions::outputNull(umbra::OutputTarget&) (ptr 0x559c89ae3700)
  br %cont9

else8:
  call void umbra::BigNumericRuntime::output(umbra::OutputTarget&, umbra::Type, umbra::data128_t) (ptr 0x559c89ae3700, i64 504403158651373057, %CodeGenerationHelpers_cpp_94_)
  br %cont9

cont9:
  call void umbra::RuntimeFunctions::printNlResult() ()
  %sql_cpp_139_ = atomicrmwxchg int8 i8 0, %CompilationContext_cpp_217_
  %CodeGen_cpp_451_ = cmpult i8 1, %sql_cpp_139_
  condbr %CodeGen_cpp_451_ %then10 %cont11

then10:
  call void umbra::RuntimeFunctions::unlockedSpinlock(void*) (%CompilationContext_cpp_217_)
  br %cont11

cont11:
  call void umbra::RuntimeFunctions::bumpResultValue(void*) (%state)
  %next = load object umbra::Preaggregation::EntryHeader %iter, i32 0, i32 1
  %PreaggregationLogic_cpp_143_ = isnotnull ptr %next
  condbr %PreaggregationLogic_cpp_143_ %loopChain %loopDoneChain

loopDoneChain:
  %PreaggregationLogic_cpp_146_ = getelementptr object umbra::Preaggregation::EntryHeader* %slot, i32 1
  %PreaggregationLogic_cpp_147_ = cmpne ptr %PreaggregationLogic_cpp_146_, %to
  condbr %PreaggregationLogic_cpp_147_ %loopSlots %loopDoneSlots

loopDoneSlots:
  br %stepDone

stepDone:
  return 40
}

declare void @umbra::RuntimeFunctions::outputNull(umbra::OutputTarget&)(object umbra::OutputTarget* %30243)

declare void @umbra::BigNumericRuntime::output(umbra::OutputTarget&, umbra::Type, umbra::data128_t)(object umbra::OutputTarget* %30299, int64 %30313, data128 %30327)

declare void @umbra::RuntimeFunctions::printNlResult()()

declare void @umbra::RuntimeFunctions::bumpResultValue(void*)(int8* %30503)

define int32 @_9_planStep29(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  call void umbra::ExecutionPlan::cleanupParallelWork(void*) (%state)
  return 0
}

define int32 @_9_cleanup(int8* %trampoline, int8* %state, int8* %localState) [
] {
body:
  %CompilationContext_cpp_217_ = getelementptr int8 %state, i64 128
  call void umbra::RelationMapped::Reader::destroy(void*) (%CompilationContext_cpp_217_)
  %CompilationContext_cpp_217_0 = getelementptr int8 %state, i64 224
  call void umbra::RelationMapped::Reader::destroy(void*) (%CompilationContext_cpp_217_0)
  %CompilationContext_cpp_217_1 = getelementptr int8 %state, i64 320
  call void umbra::ChainingHashTable::destroy(void*) (%CompilationContext_cpp_217_1)
  %CompilationContext_cpp_217_2 = getelementptr int8 %state, i64 368
  call void umbra::RelationMapped::Reader::destroy(void*) (%CompilationContext_cpp_217_2)
  %CompilationContext_cpp_217_3 = getelementptr int8 %state, i64 464
  call void umbra::ChainingHashTable::destroy(void*) (%CompilationContext_cpp_217_3)
  %CompilationContext_cpp_217_4 = getelementptr int8 %state, i64 512
  call void umbra::AggregationTarget::destroy(umbra::AggregationTarget*) (%CompilationContext_cpp_217_4)
  %CompilationContext_cpp_217_5 = getelementptr int8 %state, i64 25104
  call void umbra::ChainingHashTable::destroy(void*) (%CompilationContext_cpp_217_5)
  %CompilationContext_cpp_217_6 = getelementptr int8 %state, i64 25152
  call void umbra::AggregationTarget::destroy(umbra::AggregationTarget*) (%CompilationContext_cpp_217_6)
  return 0
}

declare void @umbra::RelationMapped::Reader::destroy(void*)(int8* %31023)

declare void @umbra::ChainingHashTable::destroy(void*)(int8* %31175)

declare void @umbra::AggregationTarget::destroy(umbra::AggregationTarget*)(object umbra::AggregationTarget* %31396)
